{
  "backgroundColor": "#FFFFFF",
  "borderColor": "#ffffff",
  "borderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
  "borderWidth": "1",
  "bottomRow": 6,
  "boxShadow": "{{appsmith.theme.boxShadow.appBoxShadow}}",
  "defaultModel": "{\n  \"tips\": [\n    \"Pass data to this widget in the default model field\",\n    \"Access data in the javascript file using the appsmith.model variable\",\n    \"Create events in the widget and trigger them in the javascript file using appsmith.triggerEvent('eventName')\",\n    \"Access data in CSS as var(--appsmith-model-{property-name})\"\n  ]\n}",
  "dynamicBindingPathList": [
    {
      "key": "theme"
    },
    {
      "key": "borderRadius"
    },
    {
      "key": "boxShadow"
    }
  ],
  "dynamicHeight": "FIXED",
  "dynamicTriggerPathList": [
    {
      "key": "onResetClick"
    }
  ],
  "events": [
    "onResetClick"
  ],
  "isCanvas": false,
  "isLoading": false,
  "isSearchWildcard": true,
  "isVisible": true,
  "key": "we08pubcyk",
  "leftColumn": 37,
  "maxDynamicHeight": 9000,
  "minDynamicHeight": 4,
  "mobileBottomRow": 123,
  "mobileLeftColumn": 0,
  "mobileRightColumn": 23,
  "mobileTopRow": 93,
  "needsErrorInfo": false,
  "onResetClick": "{{showAlert('Successfully reset!!', '');}}",
  "parentColumnSpace": 17.9375,
  "parentId": "hyg51toi9b",
  "parentRowSpace": 10,
  "renderMode": "CANVAS",
  "rightColumn": 59,
  "srcDoc": {
    "css": ".clock-time, .clock-date {\n  font-size: 1.4em;\n  font-weight: 700;\n  color: #000;\n  margin: 0;\n  padding: 0;\n  line-height: 1.1;\n  display: inline;\n}\n\n.clock-date {\n  margin-right: 0.35em;\n}\n\n.clock-container {\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  height: 100%;\n  width: 100%;\n  margin: 0;\n  padding-top: 0.4em;\n  padding-right: 0;\n  padding-bottom: 0;\n  padding-left: 0;\n}",
    "html": "<div id=\"root\"></div>",
    "js": "import React from \"https://esm.sh/react@18.2.0\";\nimport ReactDOM from \"https://esm.sh/react-dom@18.2.0\";\n\n// Map month index to Thai abbreviations\nconst thaiMonths = ['ม.ค.', 'ก.พ.', 'มี.ค.', 'เม.ย.', 'พ.ค.', 'มิ.ย.', 'ก.ค.', 'ส.ค.', 'ก.ย.', 'ต.ค.', 'พ.ย.', 'ธ.ค.'];\n\n// Format the time as HH:MM:SS \"th-TH\" (24hr)\nfunction formatTime(date) {\n  return date.toLocaleTimeString(\"th-TH\", {\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n    hour12: false\n  });\n}\n// Format the date as วันที่ dd mm yyyy(B.E.)\nfunction formatDateBE(date) {\n  const day = date.getDate().toString().padStart(2, '0');\n  const month = thaiMonths[date.getMonth()];\n  const yearBE = date.getFullYear() + 543;\n  return `วันที่ ${day} ${month} ${yearBE}`;\n}\nfunction Clock() {\n  const [now, setNow] = React.useState(appsmith.model?.time ? new Date(appsmith.model.time) : new Date());\n  React.useEffect(() => {\n    const interval = setInterval(() => {\n      setNow(new Date());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  React.useEffect(() => {\n    appsmith.onModelChange((model, prevModel) => {\n      if (model.time && model.time !== prevModel?.time) {\n        setNow(new Date(model.time));\n      }\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"clock-container\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"clock-date\"\n  }, formatDateBE(now)), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"clock-time\"\n  }, formatTime(now)));\n}\nappsmith.onReady(() => {\n  ReactDOM.render(/*#__PURE__*/React.createElement(Clock, null), document.getElementById(\"root\"));\n});"
  },
  "theme": "{{appsmith.theme}}",
  "topRow": 0,
  "type": "CUSTOM_WIDGET",
  "uncompiledSrcDoc": {
    "css": ".clock-time, .clock-date {\n  font-size: 1.4em;\n  font-weight: 700;\n  color: #000;\n  margin: 0;\n  padding: 0;\n  line-height: 1.1;\n  display: inline;\n}\n.clock-date {\n  margin-right: 0.35em;\n}\n.clock-container {\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  height: 100%;\n  width: 100%;\n  margin: 0;\n  padding-top: 0.4em;\n  padding-right: 0;\n  padding-bottom: 0;\n  padding-left: 0;\n}\n",
    "html": "<div id=\"root\"></div>",
    "js": "import React from \"https://esm.sh/react@18.2.0\";\nimport ReactDOM from \"https://esm.sh/react-dom@18.2.0\";\n\n// Map month index to Thai abbreviations\nconst thaiMonths = [\n  'ม.ค.', 'ก.พ.', 'มี.ค.', 'เม.ย.', 'พ.ค.', 'มิ.ย.',\n  'ก.ค.', 'ส.ค.', 'ก.ย.', 'ต.ค.', 'พ.ย.', 'ธ.ค.'\n];\n\n// Format the time as HH:MM:SS \"th-TH\" (24hr)\nfunction formatTime(date) {\n  return date.toLocaleTimeString(\"th-TH\", {\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n    hour12: false\n  });\n}\n// Format the date as วันที่ dd mm yyyy(B.E.)\nfunction formatDateBE(date) {\n  const day = date.getDate().toString().padStart(2, '0');\n  const month = thaiMonths[date.getMonth()];\n  const yearBE = date.getFullYear() + 543;\n  return `วันที่ ${day} ${month} ${yearBE}`;\n}\n\nfunction Clock() {\n  const [now, setNow] = React.useState(appsmith.model?.time ? new Date(appsmith.model.time) : new Date());\n\n  React.useEffect(() => {\n    const interval = setInterval(() => {\n      setNow(new Date());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  React.useEffect(() => {\n    appsmith.onModelChange((model, prevModel) => {\n      if (model.time && model.time !== prevModel?.time) {\n        setNow(new Date(model.time));\n      }\n    });\n  }, []);\n\n  return (\n    <div className=\"clock-container\">\n      <span className=\"clock-date\">{formatDateBE(now)}</span>\n      <span className=\"clock-time\">{formatTime(now)}</span>\n    </div>\n  );\n}\n\nappsmith.onReady(() => {\n  ReactDOM.render(<Clock />, document.getElementById(\"root\"));\n});\n"
  },
  "version": 1,
  "widgetId": "4ktwz8psvu",
  "widgetName": "Custom1"
}