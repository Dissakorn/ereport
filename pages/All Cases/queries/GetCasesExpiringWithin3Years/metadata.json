{
  "gitSyncId": "6872108d46877c6bf2e3ad57_a211a48d-0563-4bca-b202-47c89a46ac49",
  "id": "All Cases_GetCasesExpiringWithin3Years",
  "pluginId": "postgres-plugin",
  "pluginType": "DB",
  "unpublishedAction": {
    "actionConfiguration": {
      "body": "SELECT \n    c.case_id,\n    c.case_number,\n    c.prelim_deadline,\n    c.lead_date,\n    c.offense_base,\n    c.responsible_district,\n    c.prelim_investigator,\n    (c.lead_date + INTERVAL '1 year' * CAST(c.offense_base AS INTEGER)) as expiration_date,\n    (c.lead_date + INTERVAL '1 year' * CAST(c.offense_base AS INTEGER)) - CURRENT_DATE as days_until_expiration,\n    -- Add classification columns for table filtering\n    CASE \n        WHEN (c.lead_date + INTERVAL '1 year' * CAST(c.offense_base AS INTEGER)) <= (CURRENT_DATE + INTERVAL '1 year')\n        THEN 'CRITICAL'\n        WHEN (c.lead_date + INTERVAL '1 year' * CAST(c.offense_base AS INTEGER)) <= (CURRENT_DATE + INTERVAL '3 years')\n        THEN 'WARNING'\n        ELSE 'NORMAL'\n    END as urgency_level,\n    -- Calculate years remaining for easy filtering\n    ROUND(\n        EXTRACT(EPOCH FROM (c.lead_date + INTERVAL '1 year' * CAST(c.offense_base AS INTEGER)) - CURRENT_DATE) / \n        (365.25 * 24 * 3600), 2\n    ) as years_remaining,\n    -- Add days remaining for sorting\n    EXTRACT(DAY FROM (c.lead_date + INTERVAL '1 year' * CAST(c.offense_base AS INTEGER)) - CURRENT_DATE) as days_remaining\nFROM \n    \"case\" c\nWHERE \n    c.lead_date IS NOT NULL\n    AND c.offense_base IS NOT NULL \n    AND c.offense_base != ''\n    AND c.offense_base ~ '^[0-9]+$'\n    -- Only cases expiring within 3 years (not yet expired)\n    AND (c.lead_date + INTERVAL '1 year' * CAST(c.offense_base AS INTEGER)) <= (CURRENT_DATE + INTERVAL '3 years')\n    AND (c.lead_date + INTERVAL '1 year' * CAST(c.offense_base AS INTEGER)) > CURRENT_DATE\n    -- SIMPLIFIED DIVISION FILTER\n    AND (\n        -- If no division selected (null, empty, or 0), show all records\n        COALESCE({{Slc_Division.selectedOptionValue || 0}}::INTEGER, 0) = 0\n        OR \n        -- If division is selected, match it with responsible_district (with safe conversion)\n        (\n            c.responsible_district IS NOT NULL \n            AND c.responsible_district != ''\n            AND c.responsible_district ~ '^[0-9]+$'\n            AND CAST(c.responsible_district AS INTEGER) = {{Slc_Division.selectedOptionValue || 0}}::INTEGER\n        )\n    )\nORDER BY \n    (c.lead_date + INTERVAL '1 year' * CAST(c.offense_base AS INTEGER)) ASC;",
      "encodeParamsToggle": true,
      "paginationType": "NONE",
      "pluginSpecifiedTemplates": [
        {
          "value": true
        }
      ],
      "timeoutInMillisecond": 10000
    },
    "confirmBeforeExecute": false,
    "datasource": {
      "id": "mainDB",
      "isAutoGenerated": false,
      "name": "mainDB",
      "pluginId": "postgres-plugin"
    },
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "name": "GetCasesExpiringWithin3Years",
    "pageId": "All Cases",
    "runBehaviour": "AUTOMATIC",
    "userSetOnLoad": false
  }
}