{
  "accentColor": "{{appsmith.theme.colors.primaryColor}}",
  "animateLoading": true,
  "borderColor": "#e0dede",
  "borderRadius": "0.375rem",
  "borderWidth": "1",
  "bottomRow": 82,
  "boxShadow": "{{appsmith.theme.boxShadow.appBoxShadow}}",
  "cellBackground": "",
  "childStylesheet": {
    "button": {
      "borderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
      "boxShadow": "none",
      "buttonColor": "{{appsmith.theme.colors.primaryColor}}"
    },
    "iconButton": {
      "borderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
      "boxShadow": "none",
      "menuColor": "{{appsmith.theme.colors.primaryColor}}"
    },
    "menuButton": {
      "borderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
      "boxShadow": "none",
      "menuColor": "{{appsmith.theme.colors.primaryColor}}"
    }
  },
  "columnOrder": [
    "case_number",
    "prelim_investigator",
    "book_date_213",
    "customColumn1",
    "xn__m3cbj0e6ak2k7a",
    "book_date_644",
    "inves_investigator",
    "xn__12cs3aliicn5d8cyb2bdwxl73a",
    "xn__22cei7clx9ax7g0a6d2g",
    "prelim_deadline",
    "prelim_done",
    "inves_deadline",
    "inves_done",
    "commmand_number_date",
    "year",
    "xn__12cgj5dj7fzava0bhwv0yh",
    "case_id",
    "case_type",
    "xn__72c3aj0dmc5bo1l",
    "xn__72c1a9azao3d1e",
    "xn__m3ca8azexdza",
    "prelim_status",
    "reference",
    "lead_time",
    "lead_date",
    "combined_date",
    "case_number_date",
    "pacc_tracking_number",
    "num_book",
    "num_book_date",
    "inv_num_book",
    "inv_num_book_date",
    "received_number",
    "received_date",
    "source",
    "prelim_result",
    "prelim_round",
    "prelim_session",
    "prelim_letter",
    "prelim_evidence",
    "prelim_extension",
    "command_number",
    "inves_status",
    "inves_result",
    "inves_round",
    "inves_session",
    "inves_letter",
    "inves_extension",
    "inves_prosecutor_letter",
    "inves_evidence",
    "judgment",
    "responsible_district",
    "offense_base",
    "statute_limit",
    "statute_due_date",
    "damage_value",
    "xn__72c9ab8ayaw1e0e3c",
    "currency_id",
    "prelim_extension_count",
    "book_num_213",
    "book_sign_date_213",
    "command_year",
    "prelim_result_date",
    "command_type",
    "book_num_644",
    "inves_result_date",
    "case_num_date_show",
    "file_1",
    "file_2",
    "file_3",
    "file_4",
    "file_5",
    "note_prelim",
    "note_inves",
    "customColumn2",
    "customColumn3"
  ],
  "columnSizeMap": {
    "status": 75,
    "step": 62,
    "task": 245
  },
  "columnUpdatedAt": 1752441220514,
  "columnWidthMap": {
    "book_date_644": 177,
    "case_number": 100,
    "customColumn2": 169,
    "inves_investigator": 165,
    "prelim_investigator": 192,
    "xn__72c3aj0dmc5bo1l": 183,
    "xn__m3cbj0e6ak2k7a": 188
  },
  "compactMode": "DEFAULT",
  "defaultPageSize": 0,
  "defaultSelectedRowIndex": "0",
  "delimiter": ",",
  "derivedColumns": {
    "customColumn1": {
      "borderRadius": "0px",
      "boxShadow": "none",
      "buttonColor": "#DD4B34",
      "buttonLabel": "{{data_table.processedTableData.map((currentRow, currentIndex) => ( 'Delete'))}}",
      "buttonLabelColor": "#FFFFFF",
      "buttonStyle": "rgb(3, 179, 101)",
      "columnType": "button",
      "computedValue": "",
      "enableFilter": true,
      "enableSort": true,
      "id": "customColumn1",
      "index": 5,
      "isCellVisible": true,
      "isDerived": true,
      "isDisabled": false,
      "isVisible": true,
      "label": "Delete",
      "labelColor": "#FFFFFF",
      "menuColor": "#03B365",
      "onClick": "{{showModal('Delete_Modal')}}",
      "width": 150
    }
  },
  "displayName": "Table",
  "dynamicBindingPathList": [
    {
      "key": "derivedColumns.customColumn1.buttonLabel"
    },
    {
      "key": "accentColor"
    },
    {
      "key": "boxShadow"
    },
    {
      "key": "primaryColumns.reference.computedValue"
    },
    {
      "key": "primaryColumns.case_id.computedValue"
    },
    {
      "key": "tableData"
    },
    {
      "key": "primaryColumns.case_number.computedValue"
    },
    {
      "key": "primaryColumns.lead_time.computedValue"
    },
    {
      "key": "primaryColumns.lead_date.computedValue"
    },
    {
      "key": "primaryColumns.case_type.computedValue"
    },
    {
      "key": "primaryColumns.combined_date.computedValue"
    },
    {
      "key": "primaryColumns.case_number_date.computedValue"
    },
    {
      "key": "primaryColumns.pacc_tracking_number.computedValue"
    },
    {
      "key": "primaryColumns.num_book.computedValue"
    },
    {
      "key": "primaryColumns.num_book_date.computedValue"
    },
    {
      "key": "primaryColumns.inv_num_book.computedValue"
    },
    {
      "key": "primaryColumns.inv_num_book_date.computedValue"
    },
    {
      "key": "primaryColumns.received_number.computedValue"
    },
    {
      "key": "primaryColumns.received_date.computedValue"
    },
    {
      "key": "primaryColumns.source.computedValue"
    },
    {
      "key": "primaryColumns.prelim_status.computedValue"
    },
    {
      "key": "primaryColumns.prelim_result.computedValue"
    },
    {
      "key": "primaryColumns.prelim_round.computedValue"
    },
    {
      "key": "primaryColumns.prelim_session.computedValue"
    },
    {
      "key": "primaryColumns.prelim_letter.computedValue"
    },
    {
      "key": "primaryColumns.prelim_evidence.computedValue"
    },
    {
      "key": "primaryColumns.prelim_extension.computedValue"
    },
    {
      "key": "primaryColumns.prelim_investigator.computedValue"
    },
    {
      "key": "primaryColumns.command_number.computedValue"
    },
    {
      "key": "primaryColumns.inves_status.computedValue"
    },
    {
      "key": "primaryColumns.inves_result.computedValue"
    },
    {
      "key": "primaryColumns.inves_round.computedValue"
    },
    {
      "key": "primaryColumns.inves_session.computedValue"
    },
    {
      "key": "primaryColumns.inves_letter.computedValue"
    },
    {
      "key": "primaryColumns.inves_extension.computedValue"
    },
    {
      "key": "primaryColumns.inves_prosecutor_letter.computedValue"
    },
    {
      "key": "primaryColumns.inves_evidence.computedValue"
    },
    {
      "key": "primaryColumns.judgment.computedValue"
    },
    {
      "key": "primaryColumns.inves_investigator.computedValue"
    },
    {
      "key": "primaryColumns.responsible_district.computedValue"
    },
    {
      "key": "primaryColumns.offense_base.computedValue"
    },
    {
      "key": "primaryColumns.statute_limit.computedValue"
    },
    {
      "key": "primaryColumns.statute_due_date.computedValue"
    },
    {
      "key": "primaryColumns.damage_value.computedValue"
    },
    {
      "key": "primaryColumns.currency_id.computedValue"
    },
    {
      "key": "primaryColumns.xn__22cei7clx9ax7g0a6d2g.computedValue"
    },
    {
      "key": "primaryColumns.xn__12cs3aliicn5d8cyb2bdwxl73a.computedValue"
    },
    {
      "key": "primaryColumns.xn__72c9ab8ayaw1e0e3c.computedValue"
    },
    {
      "key": "primaryColumns.xn__72c3aj0dmc5bo1l.computedValue"
    },
    {
      "key": "primaryColumns.xn__72c1a9azao3d1e.computedValue"
    },
    {
      "key": "primaryColumns.xn__m3cbj0e6ak2k7a.computedValue"
    },
    {
      "key": "primaryColumns.xn__m3ca8azexdza.computedValue"
    },
    {
      "key": "primaryColumns.prelim_deadline.computedValue"
    },
    {
      "key": "primaryColumns.prelim_done.computedValue"
    },
    {
      "key": "primaryColumns.inves_deadline.computedValue"
    },
    {
      "key": "primaryColumns.inves_done.computedValue"
    },
    {
      "key": "primaryColumns.commmand_number_date.computedValue"
    },
    {
      "key": "primaryColumns.year.computedValue"
    },
    {
      "key": "primaryColumns.xn__12cgj5dj7fzava0bhwv0yh.computedValue"
    },
    {
      "key": "primaryColumns.case_number.cellBackground"
    },
    {
      "key": "primaryColumns.xn__22cei7clx9ax7g0a6d2g.cellBackground"
    },
    {
      "key": "primaryColumns.prelim_investigator.cellBackground"
    },
    {
      "key": "primaryColumns.xn__m3cbj0e6ak2k7a.cellBackground"
    },
    {
      "key": "primaryColumns.inves_investigator.cellBackground"
    },
    {
      "key": "primaryColumns.xn__12cs3aliicn5d8cyb2bdwxl73a.cellBackground"
    },
    {
      "key": "primaryColumns.prelim_extension_count.computedValue"
    },
    {
      "key": "primaryColumns.book_num_213.computedValue"
    },
    {
      "key": "primaryColumns.book_date_213.computedValue"
    },
    {
      "key": "primaryColumns.book_sign_date_213.computedValue"
    },
    {
      "key": "primaryColumns.command_year.computedValue"
    },
    {
      "key": "primaryColumns.prelim_result_date.computedValue"
    },
    {
      "key": "primaryColumns.command_type.computedValue"
    },
    {
      "key": "primaryColumns.book_num_644.computedValue"
    },
    {
      "key": "primaryColumns.book_date_644.computedValue"
    },
    {
      "key": "primaryColumns.inves_result_date.computedValue"
    },
    {
      "key": "primaryColumns.case_num_date_show.computedValue"
    },
    {
      "key": "primaryColumns.book_date_213.cellBackground"
    },
    {
      "key": "primaryColumns.book_date_644.cellBackground"
    },
    {
      "key": "primaryColumns.customColumn1.computedValue"
    },
    {
      "key": "primaryColumns.customColumn1.cellBackground"
    },
    {
      "key": "primaryColumns.case_number.textColor"
    },
    {
      "key": "primaryColumns.prelim_investigator.textColor"
    },
    {
      "key": "primaryColumns.book_date_213.textColor"
    },
    {
      "key": "primaryColumns.customColumn1.textColor"
    },
    {
      "key": "primaryColumns.xn__m3cbj0e6ak2k7a.textColor"
    },
    {
      "key": "primaryColumns.book_date_644.textColor"
    },
    {
      "key": "primaryColumns.inves_investigator.textColor"
    },
    {
      "key": "primaryColumns.xn__12cs3aliicn5d8cyb2bdwxl73a.textColor"
    },
    {
      "key": "primaryColumns.xn__22cei7clx9ax7g0a6d2g.textColor"
    },
    {
      "key": "primaryColumns.file_1.computedValue"
    },
    {
      "key": "primaryColumns.file_2.computedValue"
    },
    {
      "key": "primaryColumns.file_3.computedValue"
    },
    {
      "key": "primaryColumns.file_4.computedValue"
    },
    {
      "key": "primaryColumns.file_5.computedValue"
    },
    {
      "key": "primaryColumns.note_prelim.computedValue"
    },
    {
      "key": "primaryColumns.note_inves.computedValue"
    },
    {
      "key": "primaryColumns.customColumn2.computedValue"
    },
    {
      "key": "primaryColumns.customColumn3.computedValue"
    }
  ],
  "dynamicPropertyPathList": [
    {
      "key": "primaryColumns.case_number.cellBackground"
    },
    {
      "key": "primaryColumns.case_id.cellBackground"
    },
    {
      "key": "primaryColumns.case_number.textColor"
    },
    {
      "key": "primaryColumns.xn__22cei7clx9ax7g0a6d2g.cellBackground"
    },
    {
      "key": "primaryColumns.prelim_investigator.cellBackground"
    },
    {
      "key": "primaryColumns.xn__m3cbj0e6ak2k7a.cellBackground"
    },
    {
      "key": "primaryColumns.inves_investigator.cellBackground"
    },
    {
      "key": "primaryColumns.xn__12cs3aliicn5d8cyb2bdwxl73a.cellBackground"
    },
    {
      "key": "primaryColumns.xn__22cei7clx9ax7g0a6d2g.textColor"
    },
    {
      "key": "primaryColumns.prelim_investigator.textColor"
    },
    {
      "key": "primaryColumns.xn__m3cbj0e6ak2k7a.textColor"
    },
    {
      "key": "primaryColumns.inves_investigator.textColor"
    },
    {
      "key": "primaryColumns.xn__12cs3aliicn5d8cyb2bdwxl73a.textColor"
    },
    {
      "key": "primaryColumns.book_date_213.cellBackground"
    },
    {
      "key": "primaryColumns.book_date_213.textColor"
    },
    {
      "key": "primaryColumns.book_date_644.textColor"
    },
    {
      "key": "primaryColumns.book_date_644.cellBackground"
    },
    {
      "key": "primaryColumns.customColumn1.cellBackground"
    },
    {
      "key": "primaryColumns.customColumn1.textColor"
    }
  ],
  "dynamicTriggerPathList": [
    {
      "key": "onPageChange"
    },
    {
      "key": "onSearchTextChanged"
    },
    {
      "key": "onSort"
    },
    {
      "key": "onRowSelected"
    }
  ],
  "enableClientSideSearch": false,
  "enableServerSideFiltering": false,
  "hideCard": false,
  "horizontalAlignment": "CENTER",
  "iconSVG": "/static/media/icon.db8a9cbd.svg",
  "isLoading": false,
  "isSortable": false,
  "isVisible": "true",
  "isVisibleDownload": true,
  "isVisibleFilters": true,
  "isVisiblePagination": true,
  "isVisibleSearch": true,
  "key": "zba5qel0au",
  "label": "Data",
  "labelTextSize": "0.875rem",
  "leftColumn": 1,
  "onPageChange": "",
  "onRowSelected": "{{showModal(UpdateModal.name).then(() => {\n  R_CASES_REF.run();\n  prelim_budget.run();\n  inves_budget.run();\n});}}",
  "onSearchTextChanged": "",
  "onSort": "",
  "parentColumnSpace": 16.3125,
  "parentId": "78ck8p7x5q",
  "parentRowSpace": 10,
  "primaryColumnId": "xn__22ce2csa3eqw5fza5i",
  "primaryColumns": {
    "book_date_213": {
      "alias": "book_date_213",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (\n(() => {\n  const currentTime = new Date();\n  const settings = getSettings.data[0];\n  \n  if (currentRow.case_type == 2) {\n    return '#eeefef';\n  }\n  \n  if (currentRow.prelim_result !== 2) {\n    const prelimDeadline = new Date(currentRow.prelim_deadline);\n    const daysUntilPrelimDeadline = Math.ceil((prelimDeadline - currentTime) / (1000 * 60 * 60 * 24));\n    \n    if (currentRow.prelim_status == 8 || (currentRow.prelim_result !== 0 && currentRow.prelim_result !== 1)) {\n      return '#27ae60';\n    }\n    if (daysUntilPrelimDeadline <= settings.prelim_warning && daysUntilPrelimDeadline >= 0) {\n      return '#fff3cd';\n    }\n    if (daysUntilPrelimDeadline < 0) {\n      return '#d9534f';\n    }\n    return '#ffffff';\n  }\n  \n  const invesDeadline = new Date(currentRow.inves_deadline);\n  const daysUntilInvesDeadline = Math.ceil((invesDeadline - currentTime) / (1000 * 60 * 60 * 24));\n  \n  if (currentRow.inves_status == 7) {\n    return '#27ae60';\n  }\n  if (daysUntilInvesDeadline <= settings.inves_warning && daysUntilInvesDeadline >= 0) {\n    return '#fff3cd';\n  }\n  if (daysUntilInvesDeadline < 0) {\n    return '#d9534f';\n  }\n  return '#ffffff';\n})()\n)) : \n(() => {\n  const currentTime = new Date();\n  const settings = getSettings.data[0];\n  \n  if (currentRow.case_type == 2) {\n    return '#eeefef';\n  }\n  \n  if (currentRow.prelim_result !== 2) {\n    const prelimDeadline = new Date(currentRow.prelim_deadline);\n    const daysUntilPrelimDeadline = Math.ceil((prelimDeadline - currentTime) / (1000 * 60 * 60 * 24));\n    \n    if (currentRow.prelim_status == 8 || (currentRow.prelim_result !== 0 && currentRow.prelim_result !== 1)) {\n      return '#27ae60';\n    }\n    if (daysUntilPrelimDeadline <= settings.prelim_warning && daysUntilPrelimDeadline >= 0) {\n      return '#fff3cd';\n    }\n    if (daysUntilPrelimDeadline < 0) {\n      return '#d9534f';\n    }\n    return '#ffffff';\n  }\n  \n  const invesDeadline = new Date(currentRow.inves_deadline);\n  const daysUntilInvesDeadline = Math.ceil((invesDeadline - currentTime) / (1000 * 60 * 60 * 24));\n  \n  if (currentRow.inves_status == 7) {\n    return '#27ae60';\n  }\n  if (daysUntilInvesDeadline <= settings.inves_warning && daysUntilInvesDeadline >= 0) {\n    return '#fff3cd';\n  }\n  if (daysUntilInvesDeadline < 0) {\n    return '#d9534f';\n  }\n  return '#ffffff';\n})()\n })()}}",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (currentRow[\"book_date_213\"])) : book_date_213 })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "book_date_213",
      "index": 49,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": true,
      "label": "วันที่เลขาลงนาม 213",
      "notation": "standard",
      "originalId": "book_date_213",
      "sticky": "",
      "textColor": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (\n(() => {\n  const getTextColor = (bgColor) => {\n    // Convert hex color to RGB\n    const r = parseInt(bgColor.substring(1, 3), 16);\n    const g = parseInt(bgColor.substring(3, 5), 16);\n    const b = parseInt(bgColor.substring(5, 7), 16);\n    // Calculate luminance using relative luminance formula\n    const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n    // Return white text for dark backgrounds and black text for light backgrounds\n    return luminance > 0.5 ? '#000000' : '#ffffff';\n  };\n  \n  const currentTime = new Date();\n  \n  // Special Case: Case type is 2\n  if (currentRow.case_type == 2) {\n    const bgColor = '#eeefef'; // Grey for \"consolidated\" cases\n    return getTextColor(bgColor);\n  }\n  \n  // Preliminary State: If still in prelim state (inves_status == 0)\n  if (currentRow.inves_status == 0) {\n    const prelimDeadline = new Date(currentRow.prelim_deadline);\n    // Condition 1: Prelim complete\n    if (currentRow.prelim_status == 8) {\n      const bgColor = '#27ae60'; // Green\n      return getTextColor(bgColor);\n    }\n    // Condition 2: Prelim late\n    if (currentTime > prelimDeadline) {\n      const bgColor = '#d9534f'; // Red\n      return getTextColor(bgColor);\n    }\n    // Condition 3: Prelim ongoing\n    const bgColor = '#ffffff'; // White\n    return getTextColor(bgColor);\n  }\n  \n  // Investigation State\n  const invesDeadline = new Date(currentRow.inves_deadline);\n  // Condition 4: Investigation complete\n  if (currentRow.inves_status == 7) {\n    const bgColor = '#27ae60'; // Green\n    return getTextColor(bgColor);\n  }\n  // Condition 5: Investigation late\n  if (currentTime > invesDeadline && currentRow.inves_status != 0) {\n    const bgColor = '#d9534f'; // Red\n    return getTextColor(bgColor);\n  }\n  // Condition 6: Investigation ongoing\n  const bgColor = '#ffffff'; // White\n  return getTextColor(bgColor);\n})()\n)) : \n(() => {\n  const getTextColor = (bgColor) => {\n    // Convert hex color to RGB\n    const r = parseInt(bgColor.substring(1, 3), 16);\n    const g = parseInt(bgColor.substring(3, 5), 16);\n    const b = parseInt(bgColor.substring(5, 7), 16);\n    // Calculate luminance using relative luminance formula\n    const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n    // Return white text for dark backgrounds and black text for light backgrounds\n    return luminance > 0.5 ? '#000000' : '#ffffff';\n  };\n  \n  const currentTime = new Date();\n  \n  // Special Case: Case type is 2\n  if (currentRow.case_type == 2) {\n    const bgColor = '#eeefef'; // Grey for \"consolidated\" cases\n    return getTextColor(bgColor);\n  }\n  \n  // Preliminary State: If still in prelim state (inves_status == 0)\n  if (currentRow.inves_status == 0) {\n    const prelimDeadline = new Date(currentRow.prelim_deadline);\n    // Condition 1: Prelim complete\n    if (currentRow.prelim_status == 8) {\n      const bgColor = '#27ae60'; // Green\n      return getTextColor(bgColor);\n    }\n    // Condition 2: Prelim late\n    if (currentTime > prelimDeadline) {\n      const bgColor = '#d9534f'; // Red\n      return getTextColor(bgColor);\n    }\n    // Condition 3: Prelim ongoing\n    const bgColor = '#ffffff'; // White\n    return getTextColor(bgColor);\n  }\n  \n  // Investigation State\n  const invesDeadline = new Date(currentRow.inves_deadline);\n  // Condition 4: Investigation complete\n  if (currentRow.inves_status == 7) {\n    const bgColor = '#27ae60'; // Green\n    return getTextColor(bgColor);\n  }\n  // Condition 5: Investigation late\n  if (currentTime > invesDeadline && currentRow.inves_status != 0) {\n    const bgColor = '#d9534f'; // Red\n    return getTextColor(bgColor);\n  }\n  // Condition 6: Investigation ongoing\n  const bgColor = '#ffffff'; // White\n  return getTextColor(bgColor);\n})()\n })()}}",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "book_date_644": {
      "alias": "book_date_644",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (\n(() => {\n  const currentTime = new Date();\n  const settings = getSettings.data[0];\n  \n  if (currentRow.case_type == 2) {\n    return '#eeefef';\n  }\n  \n  if (currentRow.prelim_result !== 2) {\n    const prelimDeadline = new Date(currentRow.prelim_deadline);\n    const daysUntilPrelimDeadline = Math.ceil((prelimDeadline - currentTime) / (1000 * 60 * 60 * 24));\n    \n    if (currentRow.prelim_status == 8 || (currentRow.prelim_result !== 0 && currentRow.prelim_result !== 1)) {\n      return '#27ae60';\n    }\n    if (daysUntilPrelimDeadline <= settings.prelim_warning && daysUntilPrelimDeadline >= 0) {\n      return '#fff3cd';\n    }\n    if (daysUntilPrelimDeadline < 0) {\n      return '#d9534f';\n    }\n    return '#ffffff';\n  }\n  \n  const invesDeadline = new Date(currentRow.inves_deadline);\n  const daysUntilInvesDeadline = Math.ceil((invesDeadline - currentTime) / (1000 * 60 * 60 * 24));\n  \n  if (currentRow.inves_status == 7) {\n    return '#27ae60';\n  }\n  if (daysUntilInvesDeadline <= settings.inves_warning && daysUntilInvesDeadline >= 0) {\n    return '#fff3cd';\n  }\n  if (daysUntilInvesDeadline < 0) {\n    return '#d9534f';\n  }\n  return '#ffffff';\n})()\n)) : \n(() => {\n  const currentTime = new Date();\n  const settings = getSettings.data[0];\n  \n  if (currentRow.case_type == 2) {\n    return '#eeefef';\n  }\n  \n  if (currentRow.prelim_result !== 2) {\n    const prelimDeadline = new Date(currentRow.prelim_deadline);\n    const daysUntilPrelimDeadline = Math.ceil((prelimDeadline - currentTime) / (1000 * 60 * 60 * 24));\n    \n    if (currentRow.prelim_status == 8 || (currentRow.prelim_result !== 0 && currentRow.prelim_result !== 1)) {\n      return '#27ae60';\n    }\n    if (daysUntilPrelimDeadline <= settings.prelim_warning && daysUntilPrelimDeadline >= 0) {\n      return '#fff3cd';\n    }\n    if (daysUntilPrelimDeadline < 0) {\n      return '#d9534f';\n    }\n    return '#ffffff';\n  }\n  \n  const invesDeadline = new Date(currentRow.inves_deadline);\n  const daysUntilInvesDeadline = Math.ceil((invesDeadline - currentTime) / (1000 * 60 * 60 * 24));\n  \n  if (currentRow.inves_status == 7) {\n    return '#27ae60';\n  }\n  if (daysUntilInvesDeadline <= settings.inves_warning && daysUntilInvesDeadline >= 0) {\n    return '#fff3cd';\n  }\n  if (daysUntilInvesDeadline < 0) {\n    return '#d9534f';\n  }\n  return '#ffffff';\n})()\n })()}}",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (currentRow[\"book_date_644\"])) : book_date_644 })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "book_date_644",
      "index": 55,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": true,
      "label": "วันที่หนังสือรายงาน 644",
      "notation": "standard",
      "originalId": "book_date_644",
      "sticky": "",
      "textColor": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (\n(() => {\n  const getTextColor = (bgColor) => {\n    // Convert hex color to RGB\n    const r = parseInt(bgColor.substring(1, 3), 16);\n    const g = parseInt(bgColor.substring(3, 5), 16);\n    const b = parseInt(bgColor.substring(5, 7), 16);\n    // Calculate luminance using relative luminance formula\n    const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n    // Return white text for dark backgrounds and black text for light backgrounds\n    return luminance > 0.5 ? '#000000' : '#ffffff';\n  };\n  \n  const currentTime = new Date();\n  \n  // Special Case: Case type is 2\n  if (currentRow.case_type == 2) {\n    const bgColor = '#eeefef'; // Grey for \"consolidated\" cases\n    return getTextColor(bgColor);\n  }\n  \n  // Preliminary State: If still in prelim state (inves_status == 0)\n  if (currentRow.inves_status == 0) {\n    const prelimDeadline = new Date(currentRow.prelim_deadline);\n    // Condition 1: Prelim complete\n    if (currentRow.prelim_status == 8) {\n      const bgColor = '#27ae60'; // Green\n      return getTextColor(bgColor);\n    }\n    // Condition 2: Prelim late\n    if (currentTime > prelimDeadline) {\n      const bgColor = '#d9534f'; // Red\n      return getTextColor(bgColor);\n    }\n    // Condition 3: Prelim ongoing\n    const bgColor = '#ffffff'; // White\n    return getTextColor(bgColor);\n  }\n  \n  // Investigation State\n  const invesDeadline = new Date(currentRow.inves_deadline);\n  // Condition 4: Investigation complete\n  if (currentRow.inves_status == 7) {\n    const bgColor = '#27ae60'; // Green\n    return getTextColor(bgColor);\n  }\n  // Condition 5: Investigation late\n  if (currentTime > invesDeadline && currentRow.inves_status != 0) {\n    const bgColor = '#d9534f'; // Red\n    return getTextColor(bgColor);\n  }\n  // Condition 6: Investigation ongoing\n  const bgColor = '#ffffff'; // White\n  return getTextColor(bgColor);\n})()\n)) : \n(() => {\n  const getTextColor = (bgColor) => {\n    // Convert hex color to RGB\n    const r = parseInt(bgColor.substring(1, 3), 16);\n    const g = parseInt(bgColor.substring(3, 5), 16);\n    const b = parseInt(bgColor.substring(5, 7), 16);\n    // Calculate luminance using relative luminance formula\n    const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n    // Return white text for dark backgrounds and black text for light backgrounds\n    return luminance > 0.5 ? '#000000' : '#ffffff';\n  };\n  \n  const currentTime = new Date();\n  \n  // Special Case: Case type is 2\n  if (currentRow.case_type == 2) {\n    const bgColor = '#eeefef'; // Grey for \"consolidated\" cases\n    return getTextColor(bgColor);\n  }\n  \n  // Preliminary State: If still in prelim state (inves_status == 0)\n  if (currentRow.inves_status == 0) {\n    const prelimDeadline = new Date(currentRow.prelim_deadline);\n    // Condition 1: Prelim complete\n    if (currentRow.prelim_status == 8) {\n      const bgColor = '#27ae60'; // Green\n      return getTextColor(bgColor);\n    }\n    // Condition 2: Prelim late\n    if (currentTime > prelimDeadline) {\n      const bgColor = '#d9534f'; // Red\n      return getTextColor(bgColor);\n    }\n    // Condition 3: Prelim ongoing\n    const bgColor = '#ffffff'; // White\n    return getTextColor(bgColor);\n  }\n  \n  // Investigation State\n  const invesDeadline = new Date(currentRow.inves_deadline);\n  // Condition 4: Investigation complete\n  if (currentRow.inves_status == 7) {\n    const bgColor = '#27ae60'; // Green\n    return getTextColor(bgColor);\n  }\n  // Condition 5: Investigation late\n  if (currentTime > invesDeadline && currentRow.inves_status != 0) {\n    const bgColor = '#d9534f'; // Red\n    return getTextColor(bgColor);\n  }\n  // Condition 6: Investigation ongoing\n  const bgColor = '#ffffff'; // White\n  return getTextColor(bgColor);\n})()\n })()}}",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "book_num_213": {
      "alias": "book_num_213",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (currentRow[\"book_num_213\"])) : book_num_213 })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "book_num_213",
      "index": 48,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "book_num_213",
      "notation": "standard",
      "originalId": "book_num_213",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "book_num_644": {
      "alias": "book_num_644",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (currentRow[\"book_num_644\"])) : book_num_644 })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "book_num_644",
      "index": 54,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "book_num_644",
      "notation": "standard",
      "originalId": "book_num_644",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "book_sign_date_213": {
      "alias": "book_sign_date_213",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (currentRow[\"book_sign_date_213\"])) : book_sign_date_213 })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "book_sign_date_213",
      "index": 50,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "book_sign_date_213",
      "notation": "standard",
      "originalId": "book_sign_date_213",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "case_id": {
      "alias": "case_id",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"case_id\"])) :  currentRow[\"case_id\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "case_id",
      "index": 0,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "case_id",
      "notation": "standard",
      "originalId": "case_id",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "case_num_date_show": {
      "alias": "case_num_date_show",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (currentRow[\"case_num_date_show\"])) : case_num_date_show })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "case_num_date_show",
      "index": 57,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "case_num_date_show",
      "notation": "standard",
      "originalId": "case_num_date_show",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "case_number": {
      "alias": "case_number",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (\n(() => {\n  const currentTime = new Date();\n  const settings = getSettings.data[0];\n  if (currentRow.case_type == 2) {\n    return '#eeefef';\n  }\n  if (currentRow.prelim_result !== 2) {\n    const prelimDeadline = new Date(currentRow.prelim_deadline);\n    const daysUntilPrelimDeadline = Math.ceil((prelimDeadline - currentTime) / (1000 * 60 * 60 * 24));\n    if (currentRow.prelim_status == 8 || (currentRow.prelim_result !== 0 && currentRow.prelim_result !== 1)) {\n      return '#27ae60';\n    }\n    if (daysUntilPrelimDeadline <= settings.prelim_warning && daysUntilPrelimDeadline >= 0) {\n      return '#fff3cd';\n    }\n    if (daysUntilPrelimDeadline < 0) {\n      return '#d9534f';\n    }\n    return '#ffffff';\n  }\n  const invesDeadline = new Date(currentRow.inves_deadline);\n  const daysUntilInvesDeadline = Math.ceil((invesDeadline - currentTime) / (1000 * 60 * 60 * 24));\n  if (currentRow.inves_status == 7) {\n    return '#27ae60';\n  }\n  if (daysUntilInvesDeadline <= settings.inves_warning && daysUntilInvesDeadline >= 0) {\n    return '#fff3cd';\n  }\n  if (daysUntilInvesDeadline < 0) {\n    return '#d9534f';\n  }\n  return '#ffffff';\n})()\n)) : \n(() => {\n  const currentTime = new Date();\n  const settings = getSettings.data[0];\n  if (currentRow.case_type == 2) {\n    return '#eeefef';\n  }\n  if (currentRow.prelim_result !== 2) {\n    const prelimDeadline = new Date(currentRow.prelim_deadline);\n    const daysUntilPrelimDeadline = Math.ceil((prelimDeadline - currentTime) / (1000 * 60 * 60 * 24));\n    if (currentRow.prelim_status == 8 || (currentRow.prelim_result !== 0 && currentRow.prelim_result !== 1)) {\n      return '#27ae60';\n    }\n    if (daysUntilPrelimDeadline <= settings.prelim_warning && daysUntilPrelimDeadline >= 0) {\n      return '#fff3cd';\n    }\n    if (daysUntilPrelimDeadline < 0) {\n      return '#d9534f';\n    }\n    return '#ffffff';\n  }\n  const invesDeadline = new Date(currentRow.inves_deadline);\n  const daysUntilInvesDeadline = Math.ceil((invesDeadline - currentTime) / (1000 * 60 * 60 * 24));\n  if (currentRow.inves_status == 7) {\n    return '#27ae60';\n  }\n  if (daysUntilInvesDeadline <= settings.inves_warning && daysUntilInvesDeadline >= 0) {\n    return '#fff3cd';\n  }\n  if (daysUntilInvesDeadline < 0) {\n    return '#d9534f';\n  }\n  return '#ffffff';\n})()\n })()}}",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"case_number\"])) :  currentRow[\"case_number\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "case_number",
      "index": 1,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": true,
      "label": "เลขคดี",
      "notation": "standard",
      "originalId": "case_number",
      "sticky": "",
      "textColor": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (\n(() => {\n  const getTextColor = (bgColor) => {\n    // Convert hex color to RGB\n    const r = parseInt(bgColor.substring(1, 3), 16);\n    const g = parseInt(bgColor.substring(3, 5), 16);\n    const b = parseInt(bgColor.substring(5, 7), 16);\n    // Calculate luminance using relative luminance formula\n    const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n    // Return white text for dark backgrounds and black text for light backgrounds\n    return luminance > 0.5 ? '#000000' : '#ffffff';\n  };\n  \n  const currentTime = new Date();\n  \n  // Special Case: Case type is 2\n  if (currentRow.case_type == 2) {\n    const bgColor = '#eeefef'; // Grey for \"consolidated\" cases\n    return getTextColor(bgColor);\n  }\n  \n  // Preliminary State: If still in prelim state (inves_status == 0)\n  if (currentRow.inves_status == 0) {\n    const prelimDeadline = new Date(currentRow.prelim_deadline);\n    // Condition 1: Prelim complete\n    if (currentRow.prelim_status == 8) {\n      const bgColor = '#27ae60'; // Green\n      return getTextColor(bgColor);\n    }\n    // Condition 2: Prelim late\n    if (currentTime > prelimDeadline) {\n      const bgColor = '#d9534f'; // Red\n      return getTextColor(bgColor);\n    }\n    // Condition 3: Prelim ongoing\n    const bgColor = '#ffffff'; // White\n    return getTextColor(bgColor);\n  }\n  \n  // Investigation State\n  const invesDeadline = new Date(currentRow.inves_deadline);\n  // Condition 4: Investigation complete\n  if (currentRow.inves_status == 7) {\n    const bgColor = '#27ae60'; // Green\n    return getTextColor(bgColor);\n  }\n  // Condition 5: Investigation late\n  if (currentTime > invesDeadline && currentRow.inves_status != 0) {\n    const bgColor = '#d9534f'; // Red\n    return getTextColor(bgColor);\n  }\n  // Condition 6: Investigation ongoing\n  const bgColor = '#ffffff'; // White\n  return getTextColor(bgColor);\n})()\n)) : \n(() => {\n  const getTextColor = (bgColor) => {\n    // Convert hex color to RGB\n    const r = parseInt(bgColor.substring(1, 3), 16);\n    const g = parseInt(bgColor.substring(3, 5), 16);\n    const b = parseInt(bgColor.substring(5, 7), 16);\n    // Calculate luminance using relative luminance formula\n    const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n    // Return white text for dark backgrounds and black text for light backgrounds\n    return luminance > 0.5 ? '#000000' : '#ffffff';\n  };\n  \n  const currentTime = new Date();\n  \n  // Special Case: Case type is 2\n  if (currentRow.case_type == 2) {\n    const bgColor = '#eeefef'; // Grey for \"consolidated\" cases\n    return getTextColor(bgColor);\n  }\n  \n  // Preliminary State: If still in prelim state (inves_status == 0)\n  if (currentRow.inves_status == 0) {\n    const prelimDeadline = new Date(currentRow.prelim_deadline);\n    // Condition 1: Prelim complete\n    if (currentRow.prelim_status == 8) {\n      const bgColor = '#27ae60'; // Green\n      return getTextColor(bgColor);\n    }\n    // Condition 2: Prelim late\n    if (currentTime > prelimDeadline) {\n      const bgColor = '#d9534f'; // Red\n      return getTextColor(bgColor);\n    }\n    // Condition 3: Prelim ongoing\n    const bgColor = '#ffffff'; // White\n    return getTextColor(bgColor);\n  }\n  \n  // Investigation State\n  const invesDeadline = new Date(currentRow.inves_deadline);\n  // Condition 4: Investigation complete\n  if (currentRow.inves_status == 7) {\n    const bgColor = '#27ae60'; // Green\n    return getTextColor(bgColor);\n  }\n  // Condition 5: Investigation late\n  if (currentTime > invesDeadline && currentRow.inves_status != 0) {\n    const bgColor = '#d9534f'; // Red\n    return getTextColor(bgColor);\n  }\n  // Condition 6: Investigation ongoing\n  const bgColor = '#ffffff'; // White\n  return getTextColor(bgColor);\n})()\n })()}}",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "case_number_date": {
      "alias": "case_number_date",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "date",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"case_number_date\"])) :  currentRow[\"case_number_date\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "case_number_date",
      "index": 7,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "case_number_date",
      "notation": "standard",
      "originalId": "case_number_date",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "case_type": {
      "alias": "case_type",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"case_type\"])) :  currentRow[\"case_type\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "case_type",
      "index": 4,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "case_type",
      "notation": "standard",
      "originalId": "case_type",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "combined_date": {
      "alias": "combined_date",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "date",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"combined_date\"])) :  currentRow[\"combined_date\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "combined_date",
      "index": 6,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "combined_date",
      "notation": "standard",
      "originalId": "combined_date",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "command_number": {
      "alias": "command_number",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"command_number\"])) :  currentRow[\"command_number\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "command_number",
      "index": 24,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "command_number",
      "notation": "standard",
      "originalId": "command_number",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "command_type": {
      "alias": "command_type",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "number",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (currentRow[\"command_type\"])) : command_type })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "command_type",
      "index": 53,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "command_type",
      "notation": "standard",
      "originalId": "command_type",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "command_year": {
      "alias": "command_year",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (currentRow[\"command_year\"])) : command_year })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "command_year",
      "index": 51,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "command_year",
      "notation": "standard",
      "originalId": "command_year",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "commmand_number_date": {
      "alias": "commmand_number_date",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"commmand_number_date\"])) :  currentRow[\"commmand_number_date\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "commmand_number_date",
      "index": 45,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "commmand_number_date",
      "notation": "standard",
      "originalId": "commmand_number_date",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "currency_id": {
      "alias": "currency_id",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "number",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"currency_id\"])) :  currentRow[\"currency_id\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "currency_id",
      "index": 40,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "currency_id",
      "notation": "standard",
      "originalId": "currency_id",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "customColumn1": {
      "alias": "นักสืบไต่สวนเบื้องต้น",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "buttonStyle": "rgb(3, 179, 101)",
      "cellBackground": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (\n(() => {\n  const currentTime = new Date();\n  const settings = getSettings.data[0];\n  \n  if (currentRow.case_type == 2) {\n    return '#eeefef';\n  }\n  \n  if (currentRow.prelim_result !== 2) {\n    const prelimDeadline = new Date(currentRow.prelim_deadline);\n    const daysUntilPrelimDeadline = Math.ceil((prelimDeadline - currentTime) / (1000 * 60 * 60 * 24));\n    \n    if (currentRow.prelim_status == 8 || (currentRow.prelim_result !== 0 && currentRow.prelim_result !== 1)) {\n      return '#27ae60';\n    }\n    if (daysUntilPrelimDeadline <= settings.prelim_warning && daysUntilPrelimDeadline >= 0) {\n      return '#fff3cd';\n    }\n    if (daysUntilPrelimDeadline < 0) {\n      return '#d9534f';\n    }\n    return '#ffffff';\n  }\n  \n  const invesDeadline = new Date(currentRow.inves_deadline);\n  const daysUntilInvesDeadline = Math.ceil((invesDeadline - currentTime) / (1000 * 60 * 60 * 24));\n  \n  if (currentRow.inves_status == 7) {\n    return '#27ae60';\n  }\n  if (daysUntilInvesDeadline <= settings.inves_warning && daysUntilInvesDeadline >= 0) {\n    return '#fff3cd';\n  }\n  if (daysUntilInvesDeadline < 0) {\n    return '#d9534f';\n  }\n  return '#ffffff';\n})()\n)) : \n(() => {\n  const currentTime = new Date();\n  const settings = getSettings.data[0];\n  \n  if (currentRow.case_type == 2) {\n    return '#eeefef';\n  }\n  \n  if (currentRow.prelim_result !== 2) {\n    const prelimDeadline = new Date(currentRow.prelim_deadline);\n    const daysUntilPrelimDeadline = Math.ceil((prelimDeadline - currentTime) / (1000 * 60 * 60 * 24));\n    \n    if (currentRow.prelim_status == 8 || (currentRow.prelim_result !== 0 && currentRow.prelim_result !== 1)) {\n      return '#27ae60';\n    }\n    if (daysUntilPrelimDeadline <= settings.prelim_warning && daysUntilPrelimDeadline >= 0) {\n      return '#fff3cd';\n    }\n    if (daysUntilPrelimDeadline < 0) {\n      return '#d9534f';\n    }\n    return '#ffffff';\n  }\n  \n  const invesDeadline = new Date(currentRow.inves_deadline);\n  const daysUntilInvesDeadline = Math.ceil((invesDeadline - currentTime) / (1000 * 60 * 60 * 24));\n  \n  if (currentRow.inves_status == 7) {\n    return '#27ae60';\n  }\n  if (daysUntilInvesDeadline <= settings.inves_warning && daysUntilInvesDeadline >= 0) {\n    return '#fff3cd';\n  }\n  if (daysUntilInvesDeadline < 0) {\n    return '#d9534f';\n  }\n  return '#ffffff';\n})()\n })()}}",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( R_Investigator.data.find(investigator => investigator.investigator_id == currentRow[\"prelim_investigator\"])?.name || \"-\"\n)) :  R_Investigator.data.find(investigator => investigator.investigator_id == currentRow[\"prelim_investigator\"])?.name || \"-\"\n })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "horizontalAlignment": "CENTER",
      "id": "customColumn1",
      "index": 10,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": true,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": true,
      "label": "นักสืบไต่สวนเบื้องต้น",
      "labelColor": "#FFFFFF",
      "notation": "standard",
      "originalId": "customColumn1",
      "sticky": "",
      "textColor": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (\n(() => {\n  const getTextColor = (bgColor) => {\n    // Convert hex color to RGB\n    const r = parseInt(bgColor.substring(1, 3), 16);\n    const g = parseInt(bgColor.substring(3, 5), 16);\n    const b = parseInt(bgColor.substring(5, 7), 16);\n    // Calculate luminance using relative luminance formula\n    const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n    // Return white text for dark backgrounds and black text for light backgrounds\n    return luminance > 0.5 ? '#000000' : '#ffffff';\n  };\n  \n  const currentTime = new Date();\n  \n  // Special Case: Case type is 2\n  if (currentRow.case_type == 2) {\n    const bgColor = '#eeefef'; // Grey for \"consolidated\" cases\n    return getTextColor(bgColor);\n  }\n  \n  // Preliminary State: If still in prelim state (inves_status == 0)\n  if (currentRow.inves_status == 0) {\n    const prelimDeadline = new Date(currentRow.prelim_deadline);\n    // Condition 1: Prelim complete\n    if (currentRow.prelim_status == 8) {\n      const bgColor = '#27ae60'; // Green\n      return getTextColor(bgColor);\n    }\n    // Condition 2: Prelim late\n    if (currentTime > prelimDeadline) {\n      const bgColor = '#d9534f'; // Red\n      return getTextColor(bgColor);\n    }\n    // Condition 3: Prelim ongoing\n    const bgColor = '#ffffff'; // White\n    return getTextColor(bgColor);\n  }\n  \n  // Investigation State\n  const invesDeadline = new Date(currentRow.inves_deadline);\n  // Condition 4: Investigation complete\n  if (currentRow.inves_status == 7) {\n    const bgColor = '#27ae60'; // Green\n    return getTextColor(bgColor);\n  }\n  // Condition 5: Investigation late\n  if (currentTime > invesDeadline && currentRow.inves_status != 0) {\n    const bgColor = '#d9534f'; // Red\n    return getTextColor(bgColor);\n  }\n  // Condition 6: Investigation ongoing\n  const bgColor = '#ffffff'; // White\n  return getTextColor(bgColor);\n})()\n)) : \n(() => {\n  const getTextColor = (bgColor) => {\n    // Convert hex color to RGB\n    const r = parseInt(bgColor.substring(1, 3), 16);\n    const g = parseInt(bgColor.substring(3, 5), 16);\n    const b = parseInt(bgColor.substring(5, 7), 16);\n    // Calculate luminance using relative luminance formula\n    const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n    // Return white text for dark backgrounds and black text for light backgrounds\n    return luminance > 0.5 ? '#000000' : '#ffffff';\n  };\n  \n  const currentTime = new Date();\n  \n  // Special Case: Case type is 2\n  if (currentRow.case_type == 2) {\n    const bgColor = '#eeefef'; // Grey for \"consolidated\" cases\n    return getTextColor(bgColor);\n  }\n  \n  // Preliminary State: If still in prelim state (inves_status == 0)\n  if (currentRow.inves_status == 0) {\n    const prelimDeadline = new Date(currentRow.prelim_deadline);\n    // Condition 1: Prelim complete\n    if (currentRow.prelim_status == 8) {\n      const bgColor = '#27ae60'; // Green\n      return getTextColor(bgColor);\n    }\n    // Condition 2: Prelim late\n    if (currentTime > prelimDeadline) {\n      const bgColor = '#d9534f'; // Red\n      return getTextColor(bgColor);\n    }\n    // Condition 3: Prelim ongoing\n    const bgColor = '#ffffff'; // White\n    return getTextColor(bgColor);\n  }\n  \n  // Investigation State\n  const invesDeadline = new Date(currentRow.inves_deadline);\n  // Condition 4: Investigation complete\n  if (currentRow.inves_status == 7) {\n    const bgColor = '#27ae60'; // Green\n    return getTextColor(bgColor);\n  }\n  // Condition 5: Investigation late\n  if (currentTime > invesDeadline && currentRow.inves_status != 0) {\n    const bgColor = '#d9534f'; // Red\n    return getTextColor(bgColor);\n  }\n  // Condition 6: Investigation ongoing\n  const bgColor = '#ffffff'; // White\n  return getTextColor(bgColor);\n})()\n })()}}",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "customColumn2": {
      "alias": "prelim_inv",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "buttonStyle": "rgb(3, 179, 101)",
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (currentRow.prelim_investigator)) : currentRow.prelim_investigator })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "horizontalAlignment": "CENTER",
      "id": "customColumn2",
      "index": 10,
      "isCellEditable": false,
      "isCellVisible": false,
      "isDerived": true,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": true,
      "label": "prelim_inv",
      "labelColor": "#FFFFFF",
      "notation": "standard",
      "originalId": "customColumn2",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "customColumn3": {
      "alias": "inves_inv",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "buttonStyle": "rgb(3, 179, 101)",
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (currentRow.inves_investigator)) : currentRow.inves_investigator })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "horizontalAlignment": "CENTER",
      "id": "customColumn3",
      "index": 10,
      "isCellEditable": false,
      "isCellVisible": false,
      "isDerived": true,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": true,
      "label": "inves_inv",
      "labelColor": "#FFFFFF",
      "notation": "standard",
      "originalId": "customColumn3",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "damage_value": {
      "alias": "damage_value",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "number",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"damage_value\"])) :  currentRow[\"damage_value\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "damage_value",
      "index": 39,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "damage_value",
      "notation": "standard",
      "originalId": "damage_value",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "file_1": {
      "alias": "file_1",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (currentRow[\"file_1\"])) : file_1 })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "file_1",
      "index": 58,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "file_1",
      "notation": "standard",
      "originalId": "file_1",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "file_2": {
      "alias": "file_2",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (currentRow[\"file_2\"])) : file_2 })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "file_2",
      "index": 59,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "file_2",
      "notation": "standard",
      "originalId": "file_2",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "file_3": {
      "alias": "file_3",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (currentRow[\"file_3\"])) : file_3 })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "file_3",
      "index": 60,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "file_3",
      "notation": "standard",
      "originalId": "file_3",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "file_4": {
      "alias": "file_4",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (currentRow[\"file_4\"])) : file_4 })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "file_4",
      "index": 61,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "file_4",
      "notation": "standard",
      "originalId": "file_4",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "file_5": {
      "alias": "file_5",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (currentRow[\"file_5\"])) : file_5 })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "file_5",
      "index": 62,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "file_5",
      "notation": "standard",
      "originalId": "file_5",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "inv_num_book": {
      "alias": "inv_num_book",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"inv_num_book\"])) :  currentRow[\"inv_num_book\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "inv_num_book",
      "index": 11,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "inv_num_book",
      "notation": "standard",
      "originalId": "inv_num_book",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "inv_num_book_date": {
      "alias": "inv_num_book_date",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "date",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"inv_num_book_date\"])) :  currentRow[\"inv_num_book_date\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "inv_num_book_date",
      "index": 12,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "inv_num_book_date",
      "notation": "standard",
      "originalId": "inv_num_book_date",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "inves_deadline": {
      "alias": "inves_deadline",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"inves_deadline\"])) :  currentRow[\"inves_deadline\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "inves_deadline",
      "index": 43,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "inves_deadline",
      "notation": "standard",
      "originalId": "inves_deadline",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "inves_done": {
      "alias": "inves_done",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"inves_done\"])) :  currentRow[\"inves_done\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "inves_done",
      "index": 44,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "inves_done",
      "notation": "standard",
      "originalId": "inves_done",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "inves_evidence": {
      "alias": "inves_evidence",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"inves_evidence\"])) :  currentRow[\"inves_evidence\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "inves_evidence",
      "index": 32,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "inves_evidence",
      "notation": "standard",
      "originalId": "inves_evidence",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "inves_extension": {
      "alias": "inves_extension",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "checkbox",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"inves_extension\"])) :  currentRow[\"inves_extension\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "inves_extension",
      "index": 30,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "inves_extension",
      "notation": "standard",
      "originalId": "inves_extension",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "inves_investigator": {
      "alias": "inves_investigator",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (\n(() => {\n  const currentTime = new Date();\n  const settings = getSettings.data[0];\n  if (currentRow.case_type == 2) {\n    return '#eeefef';\n  }\n  if (currentRow.prelim_result !== 2) {\n    const prelimDeadline = new Date(currentRow.prelim_deadline);\n    const daysUntilPrelimDeadline = Math.ceil((prelimDeadline - currentTime) / (1000 * 60 * 60 * 24));\n    if (currentRow.prelim_status == 8 || (currentRow.prelim_result !== 0 && currentRow.prelim_result !== 1)) {\n      return '#27ae60';\n    }\n    if (daysUntilPrelimDeadline <= settings.prelim_warning && daysUntilPrelimDeadline >= 0) {\n      return '#fff3cd';\n    }\n    if (daysUntilPrelimDeadline < 0) {\n      return '#d9534f';\n    }\n    return '#ffffff';\n  }\n  const invesDeadline = new Date(currentRow.inves_deadline);\n  const daysUntilInvesDeadline = Math.ceil((invesDeadline - currentTime) / (1000 * 60 * 60 * 24));\n  if (currentRow.inves_status == 7) {\n    return '#27ae60';\n  }\n  if (daysUntilInvesDeadline <= settings.inves_warning && daysUntilInvesDeadline >= 0) {\n    return '#fff3cd';\n  }\n  if (daysUntilInvesDeadline < 0) {\n    return '#d9534f';\n  }\n  return '#ffffff';\n})()\n)) : \n(() => {\n  const currentTime = new Date();\n  const settings = getSettings.data[0];\n  if (currentRow.case_type == 2) {\n    return '#eeefef';\n  }\n  if (currentRow.prelim_result !== 2) {\n    const prelimDeadline = new Date(currentRow.prelim_deadline);\n    const daysUntilPrelimDeadline = Math.ceil((prelimDeadline - currentTime) / (1000 * 60 * 60 * 24));\n    if (currentRow.prelim_status == 8 || (currentRow.prelim_result !== 0 && currentRow.prelim_result !== 1)) {\n      return '#27ae60';\n    }\n    if (daysUntilPrelimDeadline <= settings.prelim_warning && daysUntilPrelimDeadline >= 0) {\n      return '#fff3cd';\n    }\n    if (daysUntilPrelimDeadline < 0) {\n      return '#d9534f';\n    }\n    return '#ffffff';\n  }\n  const invesDeadline = new Date(currentRow.inves_deadline);\n  const daysUntilInvesDeadline = Math.ceil((invesDeadline - currentTime) / (1000 * 60 * 60 * 24));\n  if (currentRow.inves_status == 7) {\n    return '#27ae60';\n  }\n  if (daysUntilInvesDeadline <= settings.inves_warning && daysUntilInvesDeadline >= 0) {\n    return '#fff3cd';\n  }\n  if (daysUntilInvesDeadline < 0) {\n    return '#d9534f';\n  }\n  return '#ffffff';\n})()\n })()}}",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( R_Investigator.data.find(investigator => investigator.investigator_id == currentRow[\"inves_investigator\"])?.name || \"-\"\n)) :  R_Investigator.data.find(investigator => investigator.investigator_id == currentRow[\"inves_investigator\"])?.name || \"-\"\n })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "inves_investigator",
      "index": 34,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": true,
      "label": "นักสืบไต่สวนชี้มูล",
      "notation": "standard",
      "originalId": "inves_investigator",
      "sticky": "",
      "textColor": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (\n(() => {\n  const getTextColor = (bgColor) => {\n    // Convert hex color to RGB\n    const r = parseInt(bgColor.substring(1, 3), 16);\n    const g = parseInt(bgColor.substring(3, 5), 16);\n    const b = parseInt(bgColor.substring(5, 7), 16);\n    // Calculate luminance using relative luminance formula\n    const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n    // Return white text for dark backgrounds and black text for light backgrounds\n    return luminance > 0.5 ? '#000000' : '#ffffff';\n  };\n  \n  const currentTime = new Date();\n  \n  // Special Case: Case type is 2\n  if (currentRow.case_type == 2) {\n    const bgColor = '#eeefef'; // Grey for \"consolidated\" cases\n    return getTextColor(bgColor);\n  }\n  \n  // Preliminary State: If still in prelim state (inves_status == 0)\n  if (currentRow.inves_status == 0) {\n    const prelimDeadline = new Date(currentRow.prelim_deadline);\n    // Condition 1: Prelim complete\n    if (currentRow.prelim_status == 8) {\n      const bgColor = '#27ae60'; // Green\n      return getTextColor(bgColor);\n    }\n    // Condition 2: Prelim late\n    if (currentTime > prelimDeadline) {\n      const bgColor = '#d9534f'; // Red\n      return getTextColor(bgColor);\n    }\n    // Condition 3: Prelim ongoing\n    const bgColor = '#ffffff'; // White\n    return getTextColor(bgColor);\n  }\n  \n  // Investigation State\n  const invesDeadline = new Date(currentRow.inves_deadline);\n  // Condition 4: Investigation complete\n  if (currentRow.inves_status == 7) {\n    const bgColor = '#27ae60'; // Green\n    return getTextColor(bgColor);\n  }\n  // Condition 5: Investigation late\n  if (currentTime > invesDeadline && currentRow.inves_status != 0) {\n    const bgColor = '#d9534f'; // Red\n    return getTextColor(bgColor);\n  }\n  // Condition 6: Investigation ongoing\n  const bgColor = '#ffffff'; // White\n  return getTextColor(bgColor);\n})()\n)) : \n(() => {\n  const getTextColor = (bgColor) => {\n    // Convert hex color to RGB\n    const r = parseInt(bgColor.substring(1, 3), 16);\n    const g = parseInt(bgColor.substring(3, 5), 16);\n    const b = parseInt(bgColor.substring(5, 7), 16);\n    // Calculate luminance using relative luminance formula\n    const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n    // Return white text for dark backgrounds and black text for light backgrounds\n    return luminance > 0.5 ? '#000000' : '#ffffff';\n  };\n  \n  const currentTime = new Date();\n  \n  // Special Case: Case type is 2\n  if (currentRow.case_type == 2) {\n    const bgColor = '#eeefef'; // Grey for \"consolidated\" cases\n    return getTextColor(bgColor);\n  }\n  \n  // Preliminary State: If still in prelim state (inves_status == 0)\n  if (currentRow.inves_status == 0) {\n    const prelimDeadline = new Date(currentRow.prelim_deadline);\n    // Condition 1: Prelim complete\n    if (currentRow.prelim_status == 8) {\n      const bgColor = '#27ae60'; // Green\n      return getTextColor(bgColor);\n    }\n    // Condition 2: Prelim late\n    if (currentTime > prelimDeadline) {\n      const bgColor = '#d9534f'; // Red\n      return getTextColor(bgColor);\n    }\n    // Condition 3: Prelim ongoing\n    const bgColor = '#ffffff'; // White\n    return getTextColor(bgColor);\n  }\n  \n  // Investigation State\n  const invesDeadline = new Date(currentRow.inves_deadline);\n  // Condition 4: Investigation complete\n  if (currentRow.inves_status == 7) {\n    const bgColor = '#27ae60'; // Green\n    return getTextColor(bgColor);\n  }\n  // Condition 5: Investigation late\n  if (currentTime > invesDeadline && currentRow.inves_status != 0) {\n    const bgColor = '#d9534f'; // Red\n    return getTextColor(bgColor);\n  }\n  // Condition 6: Investigation ongoing\n  const bgColor = '#ffffff'; // White\n  return getTextColor(bgColor);\n})()\n })()}}",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "inves_letter": {
      "alias": "inves_letter",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"inves_letter\"])) :  currentRow[\"inves_letter\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "inves_letter",
      "index": 29,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "inves_letter",
      "notation": "standard",
      "originalId": "inves_letter",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "inves_prosecutor_letter": {
      "alias": "inves_prosecutor_letter",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"inves_prosecutor_letter\"])) :  currentRow[\"inves_prosecutor_letter\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "inves_prosecutor_letter",
      "index": 31,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "inves_prosecutor_letter",
      "notation": "standard",
      "originalId": "inves_prosecutor_letter",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "inves_result": {
      "alias": "inves_result",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"inves_result\"])) :  currentRow[\"inves_result\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "inves_result",
      "index": 26,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "inves_result",
      "notation": "standard",
      "originalId": "inves_result",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "inves_result_date": {
      "alias": "inves_result_date",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (currentRow[\"inves_result_date\"])) : inves_result_date })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "inves_result_date",
      "index": 56,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "inves_result_date",
      "notation": "standard",
      "originalId": "inves_result_date",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "inves_round": {
      "alias": "inves_round",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"inves_round\"])) :  currentRow[\"inves_round\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "inves_round",
      "index": 27,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "inves_round",
      "notation": "standard",
      "originalId": "inves_round",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "inves_session": {
      "alias": "inves_session",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"inves_session\"])) :  currentRow[\"inves_session\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "inves_session",
      "index": 28,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "inves_session",
      "notation": "standard",
      "originalId": "inves_session",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "inves_status": {
      "alias": "inves_status",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"inves_status\"])) :  currentRow[\"inves_status\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "inves_status",
      "index": 25,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "inves_status",
      "notation": "standard",
      "originalId": "inves_status",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "judgment": {
      "alias": "judgment",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"judgment\"])) :  currentRow[\"judgment\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "judgment",
      "index": 33,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "judgment",
      "notation": "standard",
      "originalId": "judgment",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "lead_date": {
      "alias": "lead_date",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"lead_date\"])) :  currentRow[\"lead_date\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "lead_date",
      "index": 3,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "lead_date",
      "notation": "standard",
      "originalId": "lead_date",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "lead_time": {
      "alias": "lead_time",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"lead_time\"])) :  currentRow[\"lead_time\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "lead_time",
      "index": 2,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "lead_time",
      "notation": "standard",
      "originalId": "lead_time",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "note_inves": {
      "alias": "note_inves",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (currentRow[\"note_inves\"])) : note_inves })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "note_inves",
      "index": 64,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "note_inves",
      "notation": "standard",
      "originalId": "note_inves",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "note_prelim": {
      "alias": "note_prelim",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (currentRow[\"note_prelim\"])) : note_prelim })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "note_prelim",
      "index": 63,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "note_prelim",
      "notation": "standard",
      "originalId": "note_prelim",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "num_book": {
      "alias": "num_book",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"num_book\"])) :  currentRow[\"num_book\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "num_book",
      "index": 9,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "num_book",
      "notation": "standard",
      "originalId": "num_book",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "num_book_date": {
      "alias": "num_book_date",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"num_book_date\"])) :  currentRow[\"num_book_date\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "num_book_date",
      "index": 10,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "num_book_date",
      "notation": "standard",
      "originalId": "num_book_date",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "offense_base": {
      "alias": "offense_base",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"offense_base\"])) :  currentRow[\"offense_base\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "offense_base",
      "index": 36,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "offense_base",
      "notation": "standard",
      "originalId": "offense_base",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "pacc_tracking_number": {
      "alias": "pacc_tracking_number",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"pacc_tracking_number\"])) :  currentRow[\"pacc_tracking_number\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "pacc_tracking_number",
      "index": 8,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "pacc_tracking_number",
      "notation": "standard",
      "originalId": "pacc_tracking_number",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "prelim_deadline": {
      "alias": "prelim_deadline",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "date",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"prelim_deadline\"])) :  currentRow[\"prelim_deadline\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "prelim_deadline",
      "index": 41,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "prelim_deadline",
      "notation": "standard",
      "originalId": "prelim_deadline",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "prelim_done": {
      "alias": "prelim_done",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "date",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"prelim_done\"])) :  currentRow[\"prelim_done\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "prelim_done",
      "index": 42,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "prelim_done",
      "notation": "standard",
      "originalId": "prelim_done",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "prelim_evidence": {
      "alias": "prelim_evidence",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"prelim_evidence\"])) :  currentRow[\"prelim_evidence\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "prelim_evidence",
      "index": 21,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "prelim_evidence",
      "notation": "standard",
      "originalId": "prelim_evidence",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "prelim_extension": {
      "alias": "prelim_extension",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "checkbox",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"prelim_extension\"])) :  currentRow[\"prelim_extension\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "prelim_extension",
      "index": 22,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "prelim_extension",
      "notation": "standard",
      "originalId": "prelim_extension",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "prelim_extension_count": {
      "alias": "prelim_extension_count",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "number",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (currentRow[\"prelim_extension_count\"])) : prelim_extension_count })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "prelim_extension_count",
      "index": 47,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "prelim_extension_count",
      "notation": "standard",
      "originalId": "prelim_extension_count",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "prelim_investigator": {
      "alias": "prelim_investigator",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (\n(() => {\n  const currentTime = new Date();\n  const settings = getSettings.data[0];\n  if (currentRow.case_type == 2) {\n    return '#eeefef';\n  }\n  if (currentRow.prelim_result !== 2) {\n    const prelimDeadline = new Date(currentRow.prelim_deadline);\n    const daysUntilPrelimDeadline = Math.ceil((prelimDeadline - currentTime) / (1000 * 60 * 60 * 24));\n    if (currentRow.prelim_status == 8 || (currentRow.prelim_result !== 0 && currentRow.prelim_result !== 1)) {\n      return '#27ae60';\n    }\n    if (daysUntilPrelimDeadline <= settings.prelim_warning && daysUntilPrelimDeadline >= 0) {\n      return '#fff3cd';\n    }\n    if (daysUntilPrelimDeadline < 0) {\n      return '#d9534f';\n    }\n    return '#ffffff';\n  }\n  const invesDeadline = new Date(currentRow.inves_deadline);\n  const daysUntilInvesDeadline = Math.ceil((invesDeadline - currentTime) / (1000 * 60 * 60 * 24));\n  if (currentRow.inves_status == 7) {\n    return '#27ae60';\n  }\n  if (daysUntilInvesDeadline <= settings.inves_warning && daysUntilInvesDeadline >= 0) {\n    return '#fff3cd';\n  }\n  if (daysUntilInvesDeadline < 0) {\n    return '#d9534f';\n  }\n  return '#ffffff';\n})()\n)) : \n(() => {\n  const currentTime = new Date();\n  const settings = getSettings.data[0];\n  if (currentRow.case_type == 2) {\n    return '#eeefef';\n  }\n  if (currentRow.prelim_result !== 2) {\n    const prelimDeadline = new Date(currentRow.prelim_deadline);\n    const daysUntilPrelimDeadline = Math.ceil((prelimDeadline - currentTime) / (1000 * 60 * 60 * 24));\n    if (currentRow.prelim_status == 8 || (currentRow.prelim_result !== 0 && currentRow.prelim_result !== 1)) {\n      return '#27ae60';\n    }\n    if (daysUntilPrelimDeadline <= settings.prelim_warning && daysUntilPrelimDeadline >= 0) {\n      return '#fff3cd';\n    }\n    if (daysUntilPrelimDeadline < 0) {\n      return '#d9534f';\n    }\n    return '#ffffff';\n  }\n  const invesDeadline = new Date(currentRow.inves_deadline);\n  const daysUntilInvesDeadline = Math.ceil((invesDeadline - currentTime) / (1000 * 60 * 60 * 24));\n  if (currentRow.inves_status == 7) {\n    return '#27ae60';\n  }\n  if (daysUntilInvesDeadline <= settings.inves_warning && daysUntilInvesDeadline >= 0) {\n    return '#fff3cd';\n  }\n  if (daysUntilInvesDeadline < 0) {\n    return '#d9534f';\n  }\n  return '#ffffff';\n})()\n })()}}",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"สถานะแสวง\"])) :  currentRow[\"สถานะแสวง\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "prelim_investigator",
      "index": 23,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": true,
      "label": "สถานะไต่สวนเบื้องต้น",
      "notation": "standard",
      "originalId": "prelim_investigator",
      "sticky": "",
      "textColor": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (\n(() => {\n  const getTextColor = (bgColor) => {\n    // Convert hex color to RGB\n    const r = parseInt(bgColor.substring(1, 3), 16);\n    const g = parseInt(bgColor.substring(3, 5), 16);\n    const b = parseInt(bgColor.substring(5, 7), 16);\n    // Calculate luminance using relative luminance formula\n    const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n    // Return white text for dark backgrounds and black text for light backgrounds\n    return luminance > 0.5 ? '#000000' : '#ffffff';\n  };\n  \n  const currentTime = new Date();\n  \n  // Special Case: Case type is 2\n  if (currentRow.case_type == 2) {\n    const bgColor = '#eeefef'; // Grey for \"consolidated\" cases\n    return getTextColor(bgColor);\n  }\n  \n  // Preliminary State: If still in prelim state (inves_status == 0)\n  if (currentRow.inves_status == 0) {\n    const prelimDeadline = new Date(currentRow.prelim_deadline);\n    // Condition 1: Prelim complete\n    if (currentRow.prelim_status == 8) {\n      const bgColor = '#27ae60'; // Green\n      return getTextColor(bgColor);\n    }\n    // Condition 2: Prelim late\n    if (currentTime > prelimDeadline) {\n      const bgColor = '#d9534f'; // Red\n      return getTextColor(bgColor);\n    }\n    // Condition 3: Prelim ongoing\n    const bgColor = '#ffffff'; // White\n    return getTextColor(bgColor);\n  }\n  \n  // Investigation State\n  const invesDeadline = new Date(currentRow.inves_deadline);\n  // Condition 4: Investigation complete\n  if (currentRow.inves_status == 7) {\n    const bgColor = '#27ae60'; // Green\n    return getTextColor(bgColor);\n  }\n  // Condition 5: Investigation late\n  if (currentTime > invesDeadline && currentRow.inves_status != 0) {\n    const bgColor = '#d9534f'; // Red\n    return getTextColor(bgColor);\n  }\n  // Condition 6: Investigation ongoing\n  const bgColor = '#ffffff'; // White\n  return getTextColor(bgColor);\n})()\n)) : \n(() => {\n  const getTextColor = (bgColor) => {\n    // Convert hex color to RGB\n    const r = parseInt(bgColor.substring(1, 3), 16);\n    const g = parseInt(bgColor.substring(3, 5), 16);\n    const b = parseInt(bgColor.substring(5, 7), 16);\n    // Calculate luminance using relative luminance formula\n    const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n    // Return white text for dark backgrounds and black text for light backgrounds\n    return luminance > 0.5 ? '#000000' : '#ffffff';\n  };\n  \n  const currentTime = new Date();\n  \n  // Special Case: Case type is 2\n  if (currentRow.case_type == 2) {\n    const bgColor = '#eeefef'; // Grey for \"consolidated\" cases\n    return getTextColor(bgColor);\n  }\n  \n  // Preliminary State: If still in prelim state (inves_status == 0)\n  if (currentRow.inves_status == 0) {\n    const prelimDeadline = new Date(currentRow.prelim_deadline);\n    // Condition 1: Prelim complete\n    if (currentRow.prelim_status == 8) {\n      const bgColor = '#27ae60'; // Green\n      return getTextColor(bgColor);\n    }\n    // Condition 2: Prelim late\n    if (currentTime > prelimDeadline) {\n      const bgColor = '#d9534f'; // Red\n      return getTextColor(bgColor);\n    }\n    // Condition 3: Prelim ongoing\n    const bgColor = '#ffffff'; // White\n    return getTextColor(bgColor);\n  }\n  \n  // Investigation State\n  const invesDeadline = new Date(currentRow.inves_deadline);\n  // Condition 4: Investigation complete\n  if (currentRow.inves_status == 7) {\n    const bgColor = '#27ae60'; // Green\n    return getTextColor(bgColor);\n  }\n  // Condition 5: Investigation late\n  if (currentTime > invesDeadline && currentRow.inves_status != 0) {\n    const bgColor = '#d9534f'; // Red\n    return getTextColor(bgColor);\n  }\n  // Condition 6: Investigation ongoing\n  const bgColor = '#ffffff'; // White\n  return getTextColor(bgColor);\n})()\n })()}}",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "prelim_letter": {
      "alias": "prelim_letter",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"prelim_letter\"])) :  currentRow[\"prelim_letter\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "prelim_letter",
      "index": 20,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "prelim_letter",
      "notation": "standard",
      "originalId": "prelim_letter",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "prelim_result": {
      "alias": "prelim_result",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"prelim_result\"])) :  currentRow[\"prelim_result\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "prelim_result",
      "index": 17,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "prelim_result",
      "notation": "standard",
      "originalId": "prelim_result",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "prelim_result_date": {
      "alias": "prelim_result_date",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (currentRow[\"prelim_result_date\"])) : prelim_result_date })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "prelim_result_date",
      "index": 52,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "prelim_result_date",
      "notation": "standard",
      "originalId": "prelim_result_date",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "prelim_round": {
      "alias": "prelim_round",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"prelim_round\"])) :  currentRow[\"prelim_round\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "prelim_round",
      "index": 18,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "prelim_round",
      "notation": "standard",
      "originalId": "prelim_round",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "prelim_session": {
      "alias": "prelim_session",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"prelim_session\"])) :  currentRow[\"prelim_session\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "prelim_session",
      "index": 19,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "prelim_session",
      "notation": "standard",
      "originalId": "prelim_session",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "prelim_status": {
      "alias": "prelim_status",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"prelim_status\"])) :  currentRow[\"prelim_status\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "prelim_status",
      "index": 16,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "prelim_status",
      "notation": "standard",
      "originalId": "prelim_status",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "received_date": {
      "alias": "received_date",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "date",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"received_date\"])) :  currentRow[\"received_date\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "received_date",
      "index": 14,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "received_date",
      "notation": "standard",
      "originalId": "received_date",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "received_number": {
      "alias": "received_number",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"received_number\"])) :  currentRow[\"received_number\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "received_number",
      "index": 13,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "received_number",
      "notation": "standard",
      "originalId": "received_number",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "reference": {
      "alias": "reference",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"reference\"])) :  currentRow[\"reference\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "reference",
      "index": 2,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "reference",
      "notation": "standard",
      "originalId": "reference",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "responsible_district": {
      "alias": "responsible_district",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"responsible_district\"])) :  currentRow[\"responsible_district\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "responsible_district",
      "index": 35,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "responsible_district",
      "notation": "standard",
      "originalId": "responsible_district",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "source": {
      "alias": "source",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"source\"])) :  currentRow[\"source\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "source",
      "index": 15,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "source",
      "notation": "standard",
      "originalId": "source",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "statute_due_date": {
      "alias": "statute_due_date",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"statute_due_date\"])) :  currentRow[\"statute_due_date\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "statute_due_date",
      "index": 38,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "statute_due_date",
      "notation": "standard",
      "originalId": "statute_due_date",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "statute_limit": {
      "alias": "statute_limit",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"statute_limit\"])) :  currentRow[\"statute_limit\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "statute_limit",
      "index": 37,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "statute_limit",
      "notation": "standard",
      "originalId": "statute_limit",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "xn__12cgj5dj7fzava0bhwv0yh": {
      "alias": "วันที่ออกคำสั่ง",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"วันที่ออกคำสั่ง\"])) :  currentRow[\"วันที่ออกคำสั่ง\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "xn__12cgj5dj7fzava0bhwv0yh",
      "index": 47,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "วันที่ออกคำสั่ง",
      "notation": "standard",
      "originalId": "วันที่ออกคำสั่ง",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "xn__12cs3aliicn5d8cyb2bdwxl73a": {
      "alias": "สำนักที่รับผิดชอบ",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (\n(() => {\n  const currentTime = new Date();\n  const settings = getSettings.data[0];\n  if (currentRow.case_type == 2) {\n    return '#eeefef';\n  }\n  if (currentRow.prelim_result !== 2) {\n    const prelimDeadline = new Date(currentRow.prelim_deadline);\n    const daysUntilPrelimDeadline = Math.ceil((prelimDeadline - currentTime) / (1000 * 60 * 60 * 24));\n    if (currentRow.prelim_status == 8 || (currentRow.prelim_result !== 0 && currentRow.prelim_result !== 1)) {\n      return '#27ae60';\n    }\n    if (daysUntilPrelimDeadline <= settings.prelim_warning && daysUntilPrelimDeadline >= 0) {\n      return '#fff3cd';\n    }\n    if (daysUntilPrelimDeadline < 0) {\n      return '#d9534f';\n    }\n    return '#ffffff';\n  }\n  const invesDeadline = new Date(currentRow.inves_deadline);\n  const daysUntilInvesDeadline = Math.ceil((invesDeadline - currentTime) / (1000 * 60 * 60 * 24));\n  if (currentRow.inves_status == 7) {\n    return '#27ae60';\n  }\n  if (daysUntilInvesDeadline <= settings.inves_warning && daysUntilInvesDeadline >= 0) {\n    return '#fff3cd';\n  }\n  if (daysUntilInvesDeadline < 0) {\n    return '#d9534f';\n  }\n  return '#ffffff';\n})()\n)) : \n(() => {\n  const currentTime = new Date();\n  const settings = getSettings.data[0];\n  if (currentRow.case_type == 2) {\n    return '#eeefef';\n  }\n  if (currentRow.prelim_result !== 2) {\n    const prelimDeadline = new Date(currentRow.prelim_deadline);\n    const daysUntilPrelimDeadline = Math.ceil((prelimDeadline - currentTime) / (1000 * 60 * 60 * 24));\n    if (currentRow.prelim_status == 8 || (currentRow.prelim_result !== 0 && currentRow.prelim_result !== 1)) {\n      return '#27ae60';\n    }\n    if (daysUntilPrelimDeadline <= settings.prelim_warning && daysUntilPrelimDeadline >= 0) {\n      return '#fff3cd';\n    }\n    if (daysUntilPrelimDeadline < 0) {\n      return '#d9534f';\n    }\n    return '#ffffff';\n  }\n  const invesDeadline = new Date(currentRow.inves_deadline);\n  const daysUntilInvesDeadline = Math.ceil((invesDeadline - currentTime) / (1000 * 60 * 60 * 24));\n  if (currentRow.inves_status == 7) {\n    return '#27ae60';\n  }\n  if (daysUntilInvesDeadline <= settings.inves_warning && daysUntilInvesDeadline >= 0) {\n    return '#fff3cd';\n  }\n  if (daysUntilInvesDeadline < 0) {\n    return '#d9534f';\n  }\n  return '#ffffff';\n})()\n })()}}",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"สำนักที่รับผิดชอบ\"])) :  currentRow[\"สำนักที่รับผิดชอบ\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "xn__12cs3aliicn5d8cyb2bdwxl73a",
      "index": 42,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": true,
      "label": "สำนักที่รับผิดชอบ",
      "notation": "standard",
      "originalId": "สำนักที่รับผิดชอบ",
      "sticky": "",
      "textColor": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (\n(() => {\n  const getTextColor = (bgColor) => {\n    // Convert hex color to RGB\n    const r = parseInt(bgColor.substring(1, 3), 16);\n    const g = parseInt(bgColor.substring(3, 5), 16);\n    const b = parseInt(bgColor.substring(5, 7), 16);\n    // Calculate luminance using relative luminance formula\n    const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n    // Return white text for dark backgrounds and black text for light backgrounds\n    return luminance > 0.5 ? '#000000' : '#ffffff';\n  };\n  \n  const currentTime = new Date();\n  \n  // Special Case: Case type is 2\n  if (currentRow.case_type == 2) {\n    const bgColor = '#eeefef'; // Grey for \"consolidated\" cases\n    return getTextColor(bgColor);\n  }\n  \n  // Preliminary State: If still in prelim state (inves_status == 0)\n  if (currentRow.inves_status == 0) {\n    const prelimDeadline = new Date(currentRow.prelim_deadline);\n    // Condition 1: Prelim complete\n    if (currentRow.prelim_status == 8) {\n      const bgColor = '#27ae60'; // Green\n      return getTextColor(bgColor);\n    }\n    // Condition 2: Prelim late\n    if (currentTime > prelimDeadline) {\n      const bgColor = '#d9534f'; // Red\n      return getTextColor(bgColor);\n    }\n    // Condition 3: Prelim ongoing\n    const bgColor = '#ffffff'; // White\n    return getTextColor(bgColor);\n  }\n  \n  // Investigation State\n  const invesDeadline = new Date(currentRow.inves_deadline);\n  // Condition 4: Investigation complete\n  if (currentRow.inves_status == 7) {\n    const bgColor = '#27ae60'; // Green\n    return getTextColor(bgColor);\n  }\n  // Condition 5: Investigation late\n  if (currentTime > invesDeadline && currentRow.inves_status != 0) {\n    const bgColor = '#d9534f'; // Red\n    return getTextColor(bgColor);\n  }\n  // Condition 6: Investigation ongoing\n  const bgColor = '#ffffff'; // White\n  return getTextColor(bgColor);\n})()\n)) : \n(() => {\n  const getTextColor = (bgColor) => {\n    // Convert hex color to RGB\n    const r = parseInt(bgColor.substring(1, 3), 16);\n    const g = parseInt(bgColor.substring(3, 5), 16);\n    const b = parseInt(bgColor.substring(5, 7), 16);\n    // Calculate luminance using relative luminance formula\n    const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n    // Return white text for dark backgrounds and black text for light backgrounds\n    return luminance > 0.5 ? '#000000' : '#ffffff';\n  };\n  \n  const currentTime = new Date();\n  \n  // Special Case: Case type is 2\n  if (currentRow.case_type == 2) {\n    const bgColor = '#eeefef'; // Grey for \"consolidated\" cases\n    return getTextColor(bgColor);\n  }\n  \n  // Preliminary State: If still in prelim state (inves_status == 0)\n  if (currentRow.inves_status == 0) {\n    const prelimDeadline = new Date(currentRow.prelim_deadline);\n    // Condition 1: Prelim complete\n    if (currentRow.prelim_status == 8) {\n      const bgColor = '#27ae60'; // Green\n      return getTextColor(bgColor);\n    }\n    // Condition 2: Prelim late\n    if (currentTime > prelimDeadline) {\n      const bgColor = '#d9534f'; // Red\n      return getTextColor(bgColor);\n    }\n    // Condition 3: Prelim ongoing\n    const bgColor = '#ffffff'; // White\n    return getTextColor(bgColor);\n  }\n  \n  // Investigation State\n  const invesDeadline = new Date(currentRow.inves_deadline);\n  // Condition 4: Investigation complete\n  if (currentRow.inves_status == 7) {\n    const bgColor = '#27ae60'; // Green\n    return getTextColor(bgColor);\n  }\n  // Condition 5: Investigation late\n  if (currentTime > invesDeadline && currentRow.inves_status != 0) {\n    const bgColor = '#d9534f'; // Red\n    return getTextColor(bgColor);\n  }\n  // Condition 6: Investigation ongoing\n  const bgColor = '#ffffff'; // White\n  return getTextColor(bgColor);\n})()\n })()}}",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "xn__22cei7clx9ax7g0a6d2g": {
      "alias": "ประเภทของคดี",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (\n(() => {\n  const currentTime = new Date();\n  const settings = getSettings.data[0];\n  if (currentRow.case_type == 2) {\n    return '#eeefef';\n  }\n  if (currentRow.prelim_result !== 2) {\n    const prelimDeadline = new Date(currentRow.prelim_deadline);\n    const daysUntilPrelimDeadline = Math.ceil((prelimDeadline - currentTime) / (1000 * 60 * 60 * 24));\n    if (currentRow.prelim_status == 8 || (currentRow.prelim_result !== 0 && currentRow.prelim_result !== 1)) {\n      return '#27ae60';\n    }\n    if (daysUntilPrelimDeadline <= settings.prelim_warning && daysUntilPrelimDeadline >= 0) {\n      return '#fff3cd';\n    }\n    if (daysUntilPrelimDeadline < 0) {\n      return '#d9534f';\n    }\n    return '#ffffff';\n  }\n  const invesDeadline = new Date(currentRow.inves_deadline);\n  const daysUntilInvesDeadline = Math.ceil((invesDeadline - currentTime) / (1000 * 60 * 60 * 24));\n  if (currentRow.inves_status == 7) {\n    return '#27ae60';\n  }\n  if (daysUntilInvesDeadline <= settings.inves_warning && daysUntilInvesDeadline >= 0) {\n    return '#fff3cd';\n  }\n  if (daysUntilInvesDeadline < 0) {\n    return '#d9534f';\n  }\n  return '#ffffff';\n})()\n)) : \n(() => {\n  const currentTime = new Date();\n  const settings = getSettings.data[0];\n  if (currentRow.case_type == 2) {\n    return '#eeefef';\n  }\n  if (currentRow.prelim_result !== 2) {\n    const prelimDeadline = new Date(currentRow.prelim_deadline);\n    const daysUntilPrelimDeadline = Math.ceil((prelimDeadline - currentTime) / (1000 * 60 * 60 * 24));\n    if (currentRow.prelim_status == 8 || (currentRow.prelim_result !== 0 && currentRow.prelim_result !== 1)) {\n      return '#27ae60';\n    }\n    if (daysUntilPrelimDeadline <= settings.prelim_warning && daysUntilPrelimDeadline >= 0) {\n      return '#fff3cd';\n    }\n    if (daysUntilPrelimDeadline < 0) {\n      return '#d9534f';\n    }\n    return '#ffffff';\n  }\n  const invesDeadline = new Date(currentRow.inves_deadline);\n  const daysUntilInvesDeadline = Math.ceil((invesDeadline - currentTime) / (1000 * 60 * 60 * 24));\n  if (currentRow.inves_status == 7) {\n    return '#27ae60';\n  }\n  if (daysUntilInvesDeadline <= settings.inves_warning && daysUntilInvesDeadline >= 0) {\n    return '#fff3cd';\n  }\n  if (daysUntilInvesDeadline < 0) {\n    return '#d9534f';\n  }\n  return '#ffffff';\n})()\n })()}}",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"ประเภทของคดี\"])) :  currentRow[\"ประเภทของคดี\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "xn__22cei7clx9ax7g0a6d2g",
      "index": 41,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": true,
      "label": "ประเภทของคดี",
      "notation": "standard",
      "originalId": "ประเภทของคดี",
      "sticky": "",
      "textColor": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (\n(() => {\n  const getTextColor = (bgColor) => {\n    // Convert hex color to RGB\n    const r = parseInt(bgColor.substring(1, 3), 16);\n    const g = parseInt(bgColor.substring(3, 5), 16);\n    const b = parseInt(bgColor.substring(5, 7), 16);\n    // Calculate luminance using relative luminance formula\n    const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n    // Return white text for dark backgrounds and black text for light backgrounds\n    return luminance > 0.5 ? '#000000' : '#ffffff';\n  };\n  \n  const currentTime = new Date();\n  \n  // Special Case: Case type is 2\n  if (currentRow.case_type == 2) {\n    const bgColor = '#eeefef'; // Grey for \"consolidated\" cases\n    return getTextColor(bgColor);\n  }\n  \n  // Preliminary State: If still in prelim state (inves_status == 0)\n  if (currentRow.inves_status == 0) {\n    const prelimDeadline = new Date(currentRow.prelim_deadline);\n    // Condition 1: Prelim complete\n    if (currentRow.prelim_status == 8) {\n      const bgColor = '#27ae60'; // Green\n      return getTextColor(bgColor);\n    }\n    // Condition 2: Prelim late\n    if (currentTime > prelimDeadline) {\n      const bgColor = '#d9534f'; // Red\n      return getTextColor(bgColor);\n    }\n    // Condition 3: Prelim ongoing\n    const bgColor = '#ffffff'; // White\n    return getTextColor(bgColor);\n  }\n  \n  // Investigation State\n  const invesDeadline = new Date(currentRow.inves_deadline);\n  // Condition 4: Investigation complete\n  if (currentRow.inves_status == 7) {\n    const bgColor = '#27ae60'; // Green\n    return getTextColor(bgColor);\n  }\n  // Condition 5: Investigation late\n  if (currentTime > invesDeadline && currentRow.inves_status != 0) {\n    const bgColor = '#d9534f'; // Red\n    return getTextColor(bgColor);\n  }\n  // Condition 6: Investigation ongoing\n  const bgColor = '#ffffff'; // White\n  return getTextColor(bgColor);\n})()\n)) : \n(() => {\n  const getTextColor = (bgColor) => {\n    // Convert hex color to RGB\n    const r = parseInt(bgColor.substring(1, 3), 16);\n    const g = parseInt(bgColor.substring(3, 5), 16);\n    const b = parseInt(bgColor.substring(5, 7), 16);\n    // Calculate luminance using relative luminance formula\n    const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n    // Return white text for dark backgrounds and black text for light backgrounds\n    return luminance > 0.5 ? '#000000' : '#ffffff';\n  };\n  \n  const currentTime = new Date();\n  \n  // Special Case: Case type is 2\n  if (currentRow.case_type == 2) {\n    const bgColor = '#eeefef'; // Grey for \"consolidated\" cases\n    return getTextColor(bgColor);\n  }\n  \n  // Preliminary State: If still in prelim state (inves_status == 0)\n  if (currentRow.inves_status == 0) {\n    const prelimDeadline = new Date(currentRow.prelim_deadline);\n    // Condition 1: Prelim complete\n    if (currentRow.prelim_status == 8) {\n      const bgColor = '#27ae60'; // Green\n      return getTextColor(bgColor);\n    }\n    // Condition 2: Prelim late\n    if (currentTime > prelimDeadline) {\n      const bgColor = '#d9534f'; // Red\n      return getTextColor(bgColor);\n    }\n    // Condition 3: Prelim ongoing\n    const bgColor = '#ffffff'; // White\n    return getTextColor(bgColor);\n  }\n  \n  // Investigation State\n  const invesDeadline = new Date(currentRow.inves_deadline);\n  // Condition 4: Investigation complete\n  if (currentRow.inves_status == 7) {\n    const bgColor = '#27ae60'; // Green\n    return getTextColor(bgColor);\n  }\n  // Condition 5: Investigation late\n  if (currentTime > invesDeadline && currentRow.inves_status != 0) {\n    const bgColor = '#d9534f'; // Red\n    return getTextColor(bgColor);\n  }\n  // Condition 6: Investigation ongoing\n  const bgColor = '#ffffff'; // White\n  return getTextColor(bgColor);\n})()\n })()}}",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "xn__72c1a9azao3d1e": {
      "alias": "มติแสวง",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"มติแสวง\"])) :  currentRow[\"มติแสวง\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "xn__72c1a9azao3d1e",
      "index": 45,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "มติชั้นไต่สวนตอนต้น",
      "notation": "standard",
      "originalId": "มติแสวง",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "xn__72c3aj0dmc5bo1l": {
      "alias": "สถานะแสวง",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"สถานะแสวง\"])) :  currentRow[\"สถานะแสวง\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "xn__72c3aj0dmc5bo1l",
      "index": 44,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "สถานะชั้นไต่สวนตอนต้น",
      "notation": "standard",
      "originalId": "สถานะแสวง",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "xn__72c9ab8ayaw1e0e3c": {
      "alias": "หน่วยเงิน",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"หน่วยเงิน\"])) :  currentRow[\"หน่วยเงิน\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "xn__72c9ab8ayaw1e0e3c",
      "index": 43,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "หน่วยเงิน",
      "notation": "standard",
      "originalId": "หน่วยเงิน",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "xn__m3ca8azexdza": {
      "alias": "มติไต่",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"มติไต่\"])) :  currentRow[\"มติไต่\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "xn__m3ca8azexdza",
      "index": 47,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "มติชั้นไต่สวนชี้มูล",
      "notation": "standard",
      "originalId": "มติไต่",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "xn__m3cbj0e6ak2k7a": {
      "alias": "สถานะไต่",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (\n(() => {\n  const currentTime = new Date();\n  const settings = getSettings.data[0];\n  if (currentRow.case_type == 2) {\n    return '#eeefef';\n  }\n  if (currentRow.prelim_result !== 2) {\n    const prelimDeadline = new Date(currentRow.prelim_deadline);\n    const daysUntilPrelimDeadline = Math.ceil((prelimDeadline - currentTime) / (1000 * 60 * 60 * 24));\n    if (currentRow.prelim_status == 8 || (currentRow.prelim_result !== 0 && currentRow.prelim_result !== 1)) {\n      return '#27ae60';\n    }\n    if (daysUntilPrelimDeadline <= settings.prelim_warning && daysUntilPrelimDeadline >= 0) {\n      return '#fff3cd';\n    }\n    if (daysUntilPrelimDeadline < 0) {\n      return '#d9534f';\n    }\n    return '#ffffff';\n  }\n  const invesDeadline = new Date(currentRow.inves_deadline);\n  const daysUntilInvesDeadline = Math.ceil((invesDeadline - currentTime) / (1000 * 60 * 60 * 24));\n  if (currentRow.inves_status == 7) {\n    return '#27ae60';\n  }\n  if (daysUntilInvesDeadline <= settings.inves_warning && daysUntilInvesDeadline >= 0) {\n    return '#fff3cd';\n  }\n  if (daysUntilInvesDeadline < 0) {\n    return '#d9534f';\n  }\n  return '#ffffff';\n})()\n)) : \n(() => {\n  const currentTime = new Date();\n  const settings = getSettings.data[0];\n  if (currentRow.case_type == 2) {\n    return '#eeefef';\n  }\n  if (currentRow.prelim_result !== 2) {\n    const prelimDeadline = new Date(currentRow.prelim_deadline);\n    const daysUntilPrelimDeadline = Math.ceil((prelimDeadline - currentTime) / (1000 * 60 * 60 * 24));\n    if (currentRow.prelim_status == 8 || (currentRow.prelim_result !== 0 && currentRow.prelim_result !== 1)) {\n      return '#27ae60';\n    }\n    if (daysUntilPrelimDeadline <= settings.prelim_warning && daysUntilPrelimDeadline >= 0) {\n      return '#fff3cd';\n    }\n    if (daysUntilPrelimDeadline < 0) {\n      return '#d9534f';\n    }\n    return '#ffffff';\n  }\n  const invesDeadline = new Date(currentRow.inves_deadline);\n  const daysUntilInvesDeadline = Math.ceil((invesDeadline - currentTime) / (1000 * 60 * 60 * 24));\n  if (currentRow.inves_status == 7) {\n    return '#27ae60';\n  }\n  if (daysUntilInvesDeadline <= settings.inves_warning && daysUntilInvesDeadline >= 0) {\n    return '#fff3cd';\n  }\n  if (daysUntilInvesDeadline < 0) {\n    return '#d9534f';\n  }\n  return '#ffffff';\n})()\n })()}}",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"สถานะไต่\"])) :  currentRow[\"สถานะไต่\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "xn__m3cbj0e6ak2k7a",
      "index": 46,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": true,
      "label": "สถานะไต่สวนชี้มูล",
      "notation": "standard",
      "originalId": "สถานะไต่",
      "sticky": "",
      "textColor": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (\n(() => {\n  const getTextColor = (bgColor) => {\n    // Convert hex color to RGB\n    const r = parseInt(bgColor.substring(1, 3), 16);\n    const g = parseInt(bgColor.substring(3, 5), 16);\n    const b = parseInt(bgColor.substring(5, 7), 16);\n    // Calculate luminance using relative luminance formula\n    const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n    // Return white text for dark backgrounds and black text for light backgrounds\n    return luminance > 0.5 ? '#000000' : '#ffffff';\n  };\n  \n  const currentTime = new Date();\n  \n  // Special Case: Case type is 2\n  if (currentRow.case_type == 2) {\n    const bgColor = '#eeefef'; // Grey for \"consolidated\" cases\n    return getTextColor(bgColor);\n  }\n  \n  // Preliminary State: If still in prelim state (inves_status == 0)\n  if (currentRow.inves_status == 0) {\n    const prelimDeadline = new Date(currentRow.prelim_deadline);\n    // Condition 1: Prelim complete\n    if (currentRow.prelim_status == 8) {\n      const bgColor = '#27ae60'; // Green\n      return getTextColor(bgColor);\n    }\n    // Condition 2: Prelim late\n    if (currentTime > prelimDeadline) {\n      const bgColor = '#d9534f'; // Red\n      return getTextColor(bgColor);\n    }\n    // Condition 3: Prelim ongoing\n    const bgColor = '#ffffff'; // White\n    return getTextColor(bgColor);\n  }\n  \n  // Investigation State\n  const invesDeadline = new Date(currentRow.inves_deadline);\n  // Condition 4: Investigation complete\n  if (currentRow.inves_status == 7) {\n    const bgColor = '#27ae60'; // Green\n    return getTextColor(bgColor);\n  }\n  // Condition 5: Investigation late\n  if (currentTime > invesDeadline && currentRow.inves_status != 0) {\n    const bgColor = '#d9534f'; // Red\n    return getTextColor(bgColor);\n  }\n  // Condition 6: Investigation ongoing\n  const bgColor = '#ffffff'; // White\n  return getTextColor(bgColor);\n})()\n)) : \n(() => {\n  const getTextColor = (bgColor) => {\n    // Convert hex color to RGB\n    const r = parseInt(bgColor.substring(1, 3), 16);\n    const g = parseInt(bgColor.substring(3, 5), 16);\n    const b = parseInt(bgColor.substring(5, 7), 16);\n    // Calculate luminance using relative luminance formula\n    const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n    // Return white text for dark backgrounds and black text for light backgrounds\n    return luminance > 0.5 ? '#000000' : '#ffffff';\n  };\n  \n  const currentTime = new Date();\n  \n  // Special Case: Case type is 2\n  if (currentRow.case_type == 2) {\n    const bgColor = '#eeefef'; // Grey for \"consolidated\" cases\n    return getTextColor(bgColor);\n  }\n  \n  // Preliminary State: If still in prelim state (inves_status == 0)\n  if (currentRow.inves_status == 0) {\n    const prelimDeadline = new Date(currentRow.prelim_deadline);\n    // Condition 1: Prelim complete\n    if (currentRow.prelim_status == 8) {\n      const bgColor = '#27ae60'; // Green\n      return getTextColor(bgColor);\n    }\n    // Condition 2: Prelim late\n    if (currentTime > prelimDeadline) {\n      const bgColor = '#d9534f'; // Red\n      return getTextColor(bgColor);\n    }\n    // Condition 3: Prelim ongoing\n    const bgColor = '#ffffff'; // White\n    return getTextColor(bgColor);\n  }\n  \n  // Investigation State\n  const invesDeadline = new Date(currentRow.inves_deadline);\n  // Condition 4: Investigation complete\n  if (currentRow.inves_status == 7) {\n    const bgColor = '#27ae60'; // Green\n    return getTextColor(bgColor);\n  }\n  // Condition 5: Investigation late\n  if (currentTime > invesDeadline && currentRow.inves_status != 0) {\n    const bgColor = '#d9534f'; // Red\n    return getTextColor(bgColor);\n  }\n  // Condition 6: Investigation ongoing\n  const bgColor = '#ffffff'; // White\n  return getTextColor(bgColor);\n})()\n })()}}",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "year": {
      "alias": "year",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "number",
      "computedValue": "{{(() => { const tableData = data_table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"year\"])) :  currentRow[\"year\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "year",
      "index": 46,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "year",
      "notation": "standard",
      "originalId": "year",
      "sticky": "",
      "textColor": "",
      "textSize": "0.875rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    }
  },
  "renderMode": "CANVAS",
  "rightColumn": 63,
  "searchKey": "",
  "serverSidePaginationEnabled": false,
  "showInlineEditingOptionDropdown": true,
  "tableData": "{{R_CASES.data}}",
  "textColor": "",
  "textSize": "0.875rem",
  "topRow": 6,
  "totalRecordsCount": "",
  "type": "TABLE_WIDGET_V2",
  "variant": "VARIANT3",
  "version": 3,
  "verticalAlignment": "CENTER",
  "widgetId": "yk5uo90sjl",
  "widgetName": "data_table"
}